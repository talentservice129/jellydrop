{"version":3,"sources":["store/game/game-model.ts","environment/environment.ts","store/select-root.ts","store/game/game-selectors.ts","components/particles/key_bindings.types.ts","store/app/app-model.ts","store/app/app-selectors.ts","store/app/app-actions.ts","store/app/app-state.ts","store/snapshot-middleware.ts","components/particles/hooks/useLogger.tsx","engine/game-tetrominos.ts","components/particles/audio.types.tsx","components/particles/utilities.types.ts","engine/game-cell.ts","engine/game-row.ts","engine/game-collision.ts","engine/game-transform.ts","engine/game-player.ts","engine/game-pieces.ts","engine/game-buffer.ts","engine/game-ghost.ts","engine/game-reset.ts","engine/game-score.ts","engine/game-screen.ts","engine/game-sound.ts","store/game/game-actions.ts","store/game/game-state.ts","engine/game-tick.ts","store/root-reducer.ts","store/app-store.ts","components/particles/ui/UiButton.tsx","components/particles/ui/UiDialog.tsx","components/particles/hooks/useModalView.tsx","components/particles/strings.types.ts","components/molecules/app/AppDialog.tsx","components/molecules/game/GameCredits.tsx","components/organisms/dialogs/CreditsDialog.tsx","components/particles/contexts/UiThemeContext.tsx","components/atoms/app/AppBar.tsx","components/atoms/game/GameDigits.tsx","components/particles/hooks/useSpaces.tsx","components/particles/hooks/useZeros.tsx","components/particles/hooks/useMaxDigits.tsx","components/molecules/game/GameScore.tsx","components/molecules/game/GameFinish.tsx","components/organisms/dialogs/FinishDialog.tsx","components/molecules/game/GameHighScores.tsx","components/organisms/dialogs/HighScoresDialog.tsx","components/particles/ui/UiSelect.tsx","components/organisms/options/OptionsAudio.tsx","components/organisms/options/OptionsGame.tsx","components/atoms/app/AppKeyBinding.tsx","components/organisms/app/AppKeyPicker.tsx","components/organisms/options/OptionsKeyBindings.tsx","components/organisms/game/GameOptions.tsx","components/particles/ui/UiToggle.tsx","components/molecules/app/AppDarkMode.tsx","components/organisms/dialogs/OptionsDialog.tsx","components/atoms/app/AppMenu.tsx","components/organisms/Set/SetButton.tsx","components/organisms/dialogs/SettingsDialog.tsx","components/organisms/dialogs/PauseDialog.tsx","components/particles/hooks/usePageView.tsx","components/particles/hooks/useTitle.tsx","components/atoms/game/GameValue.tsx","components/atoms/game/GameBlock.tsx","components/molecules/design/DesignDisplay.tsx","components/molecules/game/GamePieces.tsx","components/particles/nulls/KeyPressed.tsx","components/atoms/game/GameHold.tsx","components/atoms/game/GameRotate.tsx","components/atoms/game/GameSettings.tsx","components/atoms/game/GameDrop.tsx","components/particles/nulls/Repeater.tsx","components/atoms/game/GameMove.tsx","components/molecules/game/GameArrows.tsx","components/organisms/game/GameControls.tsx","components/atoms/game/GameTicker.tsx","components/particles/hooks/useInterval.tsx","components/atoms/game/GameTimer.tsx","components/atoms/game/GameBlockIndex.tsx","components/molecules/game/GameGrid.tsx","components/atoms/game/GameAudio.tsx","components/molecules/game/GameMusic.tsx","components/atoms/game/GameAudioLoader.tsx","components/molecules/game/GamePreloader.tsx","components/molecules/game/GameSoundTracks.tsx","components/molecules/game/GameToast.tsx","components/organisms/game/GameEngine.tsx","components/particles/hooks/useDocVisible.tsx","components/molecules/game/GameNumber.tsx","components/organisms/game/GameNumbers.tsx","components/templates/GameDesktop.tsx","components/templates/GameMobile.tsx","components/templates/Welcome.tsx","components/templates/App.tsx","components/particles/hooks/usePersist.tsx","components/atoms/app/AppTheme.tsx","components/particles/hooks/useDarkMode.tsx","components/templates/Providers.tsx","reportWebVitals.ts","index.tsx"],"names":["GameStatus","environment","process","selectRoot","state","GameSelectors","GAME_INITIAL_STATE","buffer","rows","width","height","restart_ticker","fast_speed","level","lines_total","lines_level","lines_level_up","hold_enable","next","undefined","next_max","player_freeze","repeat_speed","score","screen","soft_drop","sound_id","sound_tracks","status","WELCOME","GAME_NAME","_GameSelectors","game","createSelector","size","welcoming","finishing","FINISHING","finished","FINISHED","paused","PAUSED","starting","STARTING","running","RUNNING","lines","restartTicker","hold","holdEnabled","repeatSpeed","screenCell","indx","speed","player","Math","max","_ref","aspectRatio","_ref2","_ref3","_slicedToArray","concat","soundTracks","toastMessage","toast_message","AppDialogType","KEY_BINDINGS","KEY_BINDING_LABELS","left","right","rotate_left","rotate_right","hard_drop","AppSelectors","APP_INITIAL_STATE","dark","ghost_piece","swipe","high_scores","music","hand","music_type","music_volume","sound","sound_volume","start_level","keys","APP_PERSIST_DEFAULT","APP_NAME","_AppSelectors","app","Boolean","highScores","ghostPiece","Swipe","musicType","musicVolume","soundVolume","dialog","startLevel","isOpen","show","persist","version","AppActions","AppState","SnapShotMiddleware","getState","action","_objectSpread","snapshot","ref","log","console","error","debug","logger","prefix","name","arguments","length","func","bind","_AppActions","createAction","open","close","recordScore","resetScore","resetOptions","_AppState","track","value","ReactGA","event","category","slice","createSlice","initialState","reducers","extraReducers","builder","addCase","payload","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_step","_iterator","_createForOfIteratorHelper","s","n","done","key","code","err","e","f","keyOf","_ref11","_ref12","min","_ref13","Array","from","Set","_toConsumableArray","sort","a","b","reverse","_ref14","restore","_objectWithoutProperties","TetrominosType","AUDIO_FILES","SOUND_FINISHED","SOUND_LEVEL","SOUND_SCORE","SOUND_DROP","SOUND_LEVEL_10","PRELOAD_AUDIO","VOLUME_OPTIONS","fill","map","_","label","MUSIC_TYPES","SOUND_ICON","true","_jsx","FaVolumeUp","false","FaVolumeMute","SOUND_TOOLTIP","MUSIC_ICON","FaMusic","MUSIC_TOOLTIP","TETROMINOS_TYPES","Object","values","rand","floor","random","randTetro","gameBufferCells","i","_regeneratorRuntime","wrap","_context","prev","stop","_marked","gameBufferRows","cells","gameCollideBuffer","x","y","gameCollideBlock","type","gameCollision","piece","_piece$i","trans_x","trans_y","GamePlayerDirection","GAME_PIECES","_GAME_PIECES","_defineProperty","O","I","S","Z","L","J","T","gamePlayerDrop","rotate","offset_x","offset_y","row","add","forEach","every","cell","removed","gamePlayerTransform","translator","rotator","trans","gameTransform","translateDown","translateNoop","coords","rotateNoop","pieces","translateDirection","_translateDirection","LEFT","RIGHT","rotateDirection","_rotateDirection","rot","trans_rot","_trans","_trans2","gameGhost","ghost","_ghost","_ghost2","gameReset","count","LEVEL_1_PER_LINE","1","2","3","4","LEVEL_2_PER_LINE","LEVEL_3_PER_LINE","LEVEL_N_PER_LINE","gamePoints","gamePointsLines","gameScreenFlatten","_y","_rows$_y","glow","_x","gameScreenRender","streak_y","writerGhost","gameScreenWriter","writerPlayer","dist","writerDrop","percent","write","GameActions","GameState","gameSound","src","push","id","gameTickRows","removeIndex","findIndex","splice","unshift","gameBufferRemoveRow","_GameActions","softDrop","hardDrop","start","run","pause","resume","quit","tick","render","bufferSet","bufferPatch","patch","move","soundTrack","toast","_GameState","reset","_gameTickPlayer","collision","gameTickPlayer","old_level","linesToClearForNextLevel","gameScore","shift","some","gamePlayerCreate","isRemoved","find","filter","nextRow","r","origin_y","gameDropPlayer","gameBufferPatch","getRootReducer","combineReducers","reducer","UiButtonShape","useAppDispatch","useDispatch","getAppStore","preloadedState","rootReducer","configureStore","devTools","maxAge","middleware","getDefaultMiddleware","configureAppStore","UiDialog","_ref$onClose","onClose","title","large","children","className","smallScreen","useMediaQuery","fullScreen","useMemo","useEffect","str","modalview","match","toLowerCase","join","useModalView","_jsxs","Dialog","classNames","PaperProps","onClick","FaArrowLeft","AppDialog","_ref$closeAction","closeAction","selectOpen","dispatch","useSelector","GameCredits","credits","desc","url","href","gameCredits","CreditsDialog","_ref$selectOpen","CREDITS","UiThemeContext","createContext","transparent","useUiTheme","useContext","UiThemeProvider","Provider","UiButton","active","disabled","preventFocus","primary","secondary","toolTip","_ref$shape","shape","NORMAL","onPress","onMouseDown","onMouseUp","onRelease","props","touching","useRef","pressing","classes","ROUND","UP","DOWN","Tooltip","onTouchStart","current","onTouchEnd","preventDefault","onMouseLeave","AppBar","tools","icon","GameDigits","digits","_ref$primary","zeros","repeat","useZeros","maxDigits","toString","useMaxDigits","spaces","__html","color","dangerouslySetInnerHTML","GameScore","rank","GameFinish","_ref$actionHome","actionHome","_ref$actionRestart","actionRestart","_ref$actionHighScores","actionHighScores","HIGH_SCORES","FaHome","VscDebugRestart","GiPodium","indexOf","FinishDialog","_ref$selectStart","selectStart","GameHighScores","_ref$selectScores","selectScores","scores","HighScoresDialog","UiSelect","_options$indx","onChange","options","option","increase","useCallback","decrease","OptionsAudio","_Fragment","OptionsGame","toggleHand","toggleSwipe","FaCheck","FaTimes","CODE_PREFIXES","AppKeyBinding","keyCode","replace","toSpaces","reduce","trim","AppKeyPicker","listener","document","addEventListener","once","removeEventListener","OptionsKeyBindings","_ref$selectKeys","selectKeys","_ref$actionKeys","actionKeys","_useState","useState","_useState2","pickKey","setPickKey","useLogger","GameOptions","darkMode","UiToggle","iconOn","iconOff","cloneOn","cloneElement","cloneOff","AppDarkMode","_ref$selectDark","selectDark","FaMoon","FaSun","OptionsDialog","_ref$selectWelcoming","selectWelcoming","OPTIONS","AppMenu","items","Button","_objectDestructuringEmpty","menu","SWIPEOPTIONS","SettingsDialog","SETTINGS","PauseDialog","_ref$selectMusic","selectMusic","_ref$selectSound","selectSound","usePageView","pageview","STATUS_TITLE","_STATUS_TITLE","GameValue","_ref$reverse","GAME_BLOCK_COLOR","_GAME_BLOCK_COLOR","GameBlock","grid","styleAnimation","style","data-testid","DesignDisplay","_ref$center","center","_ref$grid","_ref$count","_ref$type","blocks","_center","center_x","center_y","gridTemplateColumns","blockType","GamePieces","selectPieces","KeyPressed","GameHold","onHold","setActive","CgArrowsExpandLeft","GameRotate","keyCodeLeft","keyCodeRight","onRotateLeft","onRotateRight","setLeft","_useState3","_useState4","setRight","btnClass","BiRotateLeft","BiRotateRight","GameSettings","FaBars","GameDrop","onDrop","Repeater","emitFirst","onRepeat","setInterval","clearInterval","GameMove","onMove","_ref$speed","setCount","enable","setEnable","startRepeat","stopRepeat","GameArrows","onHardDrop","onLeft","onRight","onSoftDrop","FaChevronUp","FaChevronLeft","FaChevronRight","FaChevronDown","GameControls","_ref$selectRepeatSpee","selectRepeatSpeed","_ref$selectEnabled","selectEnabled","_ref$selectHoldEnable","selectHoldEnabled","_useSelector","enabled","fast","GameTicker","onTick","callback","ms","deps","all_deps","useInterval","GameTimer","onStart","counter","setCounter","defaultProps","GameBlockIndex","GameGrid","_useSelector2","GameAudio","_ref$autoPlay","autoPlay","loop","onDone","onLoaded","volume","controls","onEnded","onCanPlayThrough","GameMusic","GameAudioLoader","sources","sourceMap","pairs","Map","setLoaded","set","loaded","GamePreloader","preload","GameSoundTracks","GameToast","message","GameEngine","showToast","setShowToast","visible","isVisible","visibilityState","setVisible","onVisible","useDocVisible","querySelectorAll","getElementsByClassName","touchStartX","touchStartY","handleTouchStart","touches","pageX","pageY","targetTouches","changedTouches","touch","handleTouchEnd","direction","touchEndX","touchEndY","deltaX","deltaY","abs","setTimeout","clearTimeout","GameNumber","GameNumbers","GameDesktop","floatControls","GameMobile","Welcome","App","isWideScreen","isShortScreen","isNarrowScreen","storageKey","json","localStorage","getItem","data","JSON","parse","setItem","stringify","usePersist","useTitle","bg","AppTheme","html","documentElement","classList","remove","useDarkMode","StylesProvider","injectFirst","Providers","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9dc11c48.chunk.js","sourcesContent":["import {SoundTrack} from '../../components/particles/audio.types';\nimport {GameBuffer} from '../../engine/game-buffer';\nimport {GameGhost, GamePlayer} from '../../engine/game-player';\nimport {GameScreen} from '../../engine/game-screen';\nimport {TetrominosType} from '../../engine/game-tetrominos';\n\n/**\n * Status controls the running state of the game.\n */\nexport enum GameStatus {\n    /**\n     * Shows the welcome screen.\n     */\n    WELCOME = 'welcome',\n    /**\n     * Shows the count down timer.\n     */\n    STARTING = 'starting',\n    /**\n     * Pieces are falling.\n     */\n    RUNNING = 'running',\n    /**\n     * Game is in progress but paused.\n     */\n    PAUSED = 'paused',\n    /**\n     * Game is over and collecting final points.\n     */\n    FINISHING = 'finishing',\n    /**\n     * Game is finished and final score is shown.\n     */\n    FINISHED = 'finished'\n}\n\nexport type NextTetrominos = Array<TetrominosType | undefined>;\n\n/**\n * The store for the game engine.\n */\nexport interface GameModel {\n    /**\n     * Defines the background buffer of blocks.\n     */\n    buffer: GameBuffer;\n\n    /**\n     * Speed for fast mode.\n     */\n    fast_speed: number;\n\n    /**\n     * Defines the location of the ghost piece.\n     */\n    ghost?: GameGhost;\n\n    /**\n     * Stores a piece being held.\n     */\n    hold?: TetrominosType;\n\n    /**\n     * Controls holding only once per turn.\n     */\n    hold_enable: boolean;\n\n    /**\n     * Player's current level.\n     */\n    level: number;\n\n    /**\n     * Number of lines cleared on current level.\n     */\n    lines_level: number;\n\n    /**\n     * Number of lines to clear current level.\n     */\n    lines_level_up: number;\n\n    /**\n     * Number of lines cleared so far.\n     */\n    lines_total: number;\n\n    /**\n     * Collection of pieces coming next.\n     */\n    next: NextTetrominos;\n\n    /**\n     * Number of pieces in the next queue.\n     */\n    next_max: number;\n\n    /**\n     * Defines the location of the current piece.\n     */\n    player?: GamePlayer;\n\n    /**\n     * Piece was hard dropped.\n     */\n    player_freeze: boolean;\n\n    /**\n     * Speed of repeating control inputs.\n     */\n    repeat_speed: number;\n\n    /**\n     * Uses to restart the game ticker.\n     */\n    restart_ticker: number;\n\n    /**\n     * Player's current score.\n     */\n    score: number;\n\n    /**\n     * Output buffer that combines the background buffer and player's falling\n     * piece.\n     */\n    screen: GameScreen;\n\n    /**\n     * Player is holding the soft drop key.\n     */\n    soft_drop: boolean;\n\n    /**\n     * Next sound track ID.\n     */\n    sound_id: number;\n\n    /**\n     * Collection of sound tracks being played.\n     */\n    sound_tracks: Array<SoundTrack>;\n\n    /**\n     * Game status\n     */\n    status: GameStatus;\n\n    /**\n     * Displays a message to the player.\n     */\n    toast_message?: string;\n}\n\n/**\n * Default state of the store.\n */\nexport const GAME_INITIAL_STATE: GameModel = {\n    buffer: {rows: [], width: 0, height: 0},\n    restart_ticker: 0,\n    fast_speed: 25,\n    level: 1,\n    lines_total: 0,\n    lines_level: 0,\n    lines_level_up: 1,\n    hold_enable: true,\n    next: [undefined, undefined, undefined],\n    next_max: 3,\n    player_freeze: false,\n    repeat_speed: 100,\n    score: 0,\n    screen: [],\n    soft_drop: false,\n    sound_id: 1,\n    sound_tracks: [],\n    status: GameStatus.WELCOME\n};\n\n/**\n * Name of the store.\n */\nexport const GAME_NAME = 'game';\n","export interface Environment {\n    analytics: string;\n\n    base: string;\n\n    brandName: string;\n\n    github: string;\n\n    storageKey: string;\n\n    version: string;\n}\n\nexport const environment: Environment = {\n    analytics: process.env.REACT_APP_ANALYTICS as string,\n    brandName: process.env.REACT_APP_BRAND_NAME as string,\n    github: process.env.REACT_APP_GITHUB as string,\n    storageKey: process.env.REACT_APP_STORAGE_KEY as string,\n    version: process.env.REACT_APP_VERSION as string,\n    base: process.env.REACT_APP_BASE as string\n};\n","import {AppState} from './app-store';\n\n/**\n * Root selector function that helps infer type.\n */\nexport const selectRoot = (state: AppState) => state;\n","import {createSelector} from '@reduxjs/toolkit';\nimport {selectRoot} from '../select-root';\nimport {GameStatus, NextTetrominos} from './game-model';\n\nexport namespace GameSelectors {\n    /**\n     * Root game selector.\n     */\n    export const game = createSelector(selectRoot, (state) => state.game);\n\n    const buffer = createSelector(game, (game) => game.buffer);\n    const screen = createSelector(game, (game) => game.screen);\n\n    /**\n     * Status of the game engine.\n     */\n    export const status = createSelector(game, (game) => game.status);\n\n    /**\n     * show the welcome screen.\n     */\n    export const welcoming = createSelector(\n        status,\n        (status) => status === GameStatus.WELCOME\n    );\n\n    /**\n     * Play finish animation.\n     */\n    export const finishing = createSelector(\n        status,\n        (status) => status === GameStatus.FINISHING\n    );\n\n    /**\n     * Show the finished dialog.\n     */\n    export const finished = createSelector(\n        status,\n        (status) => status === GameStatus.FINISHED\n    );\n\n    /**\n     * Show the paused dialog.\n     */\n    export const paused = createSelector(\n        status,\n        (status) => status === GameStatus.PAUSED\n    );\n\n    /**\n     * Show the count down timer.\n     */\n    export const starting = createSelector(\n        status,\n        (status) => status === GameStatus.STARTING\n    );\n\n    /**\n     * Run the game engine.\n     */\n    export const running = createSelector(\n        status,\n        (status) => status === GameStatus.RUNNING\n    );\n\n    /**\n     * Selects current level.\n     */\n    export const level = createSelector(game, (game) => game.level);\n\n    /**\n     * Lines cleared by the player.\n     */\n    export const lines = createSelector(game, (game) => {\n        return game.lines_total + game.lines_level;\n    });\n\n    /**\n     * Changes to restart the game tick timer.\n     */\n    export const restartTicker = createSelector(\n        game,\n        (game) => game.restart_ticker\n    );\n\n    /**\n     * Selects current score.\n     */\n    export const score = createSelector(game, (game) => game.score);\n\n    /**\n     * Selects the next piece.\n     */\n    export const next = createSelector(game, (game) => game.next);\n\n    /**\n     * Selects the piece being held.\n     */\n    export const hold = createSelector(\n        game,\n        (game) => (game.hold ? [game.hold] : [undefined]) as NextTetrominos\n    );\n\n    /**\n     * Selects if hold is enabled.\n     */\n    export const holdEnabled = createSelector(game, (game) => game.hold_enable);\n\n    /**\n     * How fast input controls is repeated.\n     */\n    export const repeatSpeed = createSelector(\n        game,\n        (game) => game.repeat_speed\n    );\n\n    /**\n     * Selects a specific cell on the screen.\n     */\n    export const screenCell = (indx: number) =>\n        createSelector(screen, (screen) => screen[indx]);\n\n    /**\n     * Selects the game speed.\n     */\n    export const speed = createSelector(game, (game) => {\n        if (game.soft_drop && game.player) {\n            return game.fast_speed;\n        }\n        const speed = 500 - game.level * 20;\n        return Math.max(game.fast_speed, speed);\n    });\n\n    /**\n     * Selects the size of the buffer.\n     */\n    export const size = createSelector(buffer, ({width, height}) => [\n        width,\n        height\n    ]);\n\n    /**\n     * Selects the CSS aspect ratio of the game board.\n     * Includes padding adjustments.\n     */\n    export const aspectRatio = createSelector(\n        size,\n        ([width, height]) => `${width / height} / 0.9`\n    );\n\n    /**\n     * Selects the sound tracks to play.\n     */\n    export const soundTracks = createSelector(\n        game,\n        (game) => game.sound_tracks\n    );\n\n    /**\n     * Selects a toast message for the player.\n     */\n    export const toastMessage = createSelector(\n        game,\n        (game) => game.toast_message\n    );\n}\n","export interface KeyBindings {\n    hard_drop: string;\n\n    hold: string;\n\n    left: string;\n\n    right: string;\n\n    rotate_left: string;\n\n    rotate_right: string;\n\n    soft_drop: string;\n}\n\nexport const DEFAULT_KEY_BINDINGS: KeyBindings = {\n    right: 'ArrowRight',\n    left: 'ArrowLeft',\n    rotate_left: 'ArrowUp',\n    rotate_right: 'KeyZ',\n    soft_drop: 'ArrowDown',\n    hard_drop: 'Space',\n    hold: 'KeyC'\n};\n\nexport const KEY_BINDINGS: Array<keyof KeyBindings> = [\n    'left',\n    'right',\n    'rotate_left',\n    'rotate_right',\n    'soft_drop',\n    'hard_drop',\n    'hold'\n];\n\nexport const KEY_BINDING_LABELS: Record<keyof KeyBindings, string> = {\n    left: 'Move Left',\n    right: 'Move Right',\n    rotate_left: 'Rotate Left',\n    rotate_right: 'Rotate Right',\n    soft_drop: 'Soft Drop',\n    hard_drop: 'Hard Drop',\n    hold: 'Hold'\n};\n","import {\n    DEFAULT_KEY_BINDINGS,\n    KeyBindings\n} from '../../components/particles/key_bindings.types';\nimport {environment} from '../../environment/environment';\n\n/**\n * Defines dialogs that can be shown.\n */\nexport enum AppDialogType {\n    OPTIONS = 'options',\n    SWIPEOPTIONS = 'swipeoptions',\n    HIGH_SCORES = 'high_scores',\n    CREDITS = 'credits',\n    SETTINGS = 'settings'\n}\n\nexport interface AppModel {\n    /**\n     * Toggles dark mode for the theme.\n     */\n    dark: boolean;\n\n    /**\n     * Current visible dialog.\n     */\n    dialog?: AppDialogType;\n\n    /**\n     * Show a ghost of where a piece will land.\n     */\n    ghost_piece: boolean;\n    swipe: 'on' | 'off';\n    hand: 'right' | 'left';\n\n    /**\n     * List of high scores.\n     */\n    high_scores: Array<number>;\n\n    /**\n     * Game keyboard bindings.\n     */\n    keys: KeyBindings;\n\n    /**\n     * Play music.\n     */\n    music: boolean;\n\n    /**\n     * Music track to play.\n     */\n    music_type: number;\n\n    /**\n     * Music volume.\n     */\n    music_volume: number;\n\n    /**\n     * Play sound effects.\n     */\n    sound: boolean;\n\n    /**\n     * Sound volume.\n     */\n    sound_volume: number;\n\n    /**\n     * Player's starting level.\n     */\n    start_level: number;\n}\n\n/**\n * Default state for the app.\n */\nexport const APP_INITIAL_STATE: AppModel = {\n    dark: false,\n    ghost_piece: true,\n    swipe: 'off',\n    high_scores: [],\n    music: true,\n    hand: 'right',\n    music_type: 0,\n    music_volume: 80,\n    sound: true,\n    sound_volume: 80,\n    start_level: 1,\n    keys: DEFAULT_KEY_BINDINGS\n};\n\n/**\n * Selection of state properties to persist to localStorage along with a\n * version to track compatability.\n */\nexport type AppPersist = Pick<\n    AppModel,\n    | 'dark'\n    | 'ghost_piece'\n    | 'swipe'\n    | 'hand'\n    | 'start_level'\n    | 'sound'\n    | 'sound_volume'\n    | 'music'\n    | 'music_volume'\n    | 'music_type'\n    | 'high_scores'\n    | 'keys'\n> & {version: string};\n\n/**\n * Defaults persist values.\n */\nexport const APP_PERSIST_DEFAULT: AppPersist = {\n    dark: APP_INITIAL_STATE.dark,\n    ghost_piece: APP_INITIAL_STATE.ghost_piece,\n    swipe: APP_INITIAL_STATE.swipe,\n    hand: APP_INITIAL_STATE.hand,\n    start_level: APP_INITIAL_STATE.start_level,\n    sound: APP_INITIAL_STATE.sound,\n    sound_volume: APP_INITIAL_STATE.sound_volume,\n    music: APP_INITIAL_STATE.music,\n    music_volume: APP_INITIAL_STATE.music_volume,\n    music_type: APP_INITIAL_STATE.music_type,\n    high_scores: APP_INITIAL_STATE.high_scores,\n    keys: APP_INITIAL_STATE.keys,\n    version: environment.version\n};\n\nexport const APP_NAME = 'app';\n","import {createSelector} from '@reduxjs/toolkit';\nimport {environment} from '../../environment/environment';\nimport {selectRoot} from '../select-root';\nimport {AppDialogType, AppPersist} from './app-model';\n\nexport namespace AppSelectors {\n    /**\n     * Root app selector.\n     */\n    export const app = createSelector(selectRoot, (state) => state.app);\n\n    /**\n     * Selects if dark mode is enabled.\n     */\n    export const dark = createSelector(app, (app) => Boolean(app.dark));\n\n    /**\n     * Selects high scores.\n     */\n    export const highScores = createSelector(app, (app) => app.high_scores);\n\n    /**\n     * Selects ghost piece.\n     */\n    export const ghostPiece = createSelector(app, (app) => app.ghost_piece);\n    export const Swipe = createSelector(app, (app) => app.swipe);\n    export const hand = createSelector(app, (app) => app.hand);\n\n    /**\n     * Selects if music is enabled.\n     */\n    export const music = createSelector(app, (app) => Boolean(app.music));\n\n    /**\n     * Selects if music is enabled.\n     */\n    export const musicType = createSelector(app, (app) => app.music_type);\n\n    /**\n     * Selects if music is enabled.\n     */\n    export const musicVolume = createSelector(app, (app) => app.music_volume);\n\n    /**\n     * Selects if dark mode is enabled.\n     */\n    export const sound = createSelector(app, (app) => Boolean(app.sound));\n\n    /**\n     * Selects if dark mode is enabled.\n     */\n    export const soundVolume = createSelector(app, (app) => app.sound_volume);\n\n    /**\n     * Selects which dialog is displayed.\n     */\n    export const dialog = createSelector(app, (app) => app.dialog);\n\n    /**\n     * Selects if a given dialog is visible.\n     */\n    export const isOpen = (show: AppDialogType) =>\n        createSelector(dialog, (dialog) => dialog === show);\n\n    /**\n     * Selects player's starting level.\n     */\n    export const startLevel = createSelector(app, (app) => app.start_level);\n\n    /**\n     * Selects the keyboard key bindings.\n     */\n    export const keys = createSelector(app, (app) => app.keys);\n\n    /**\n     * Selects values to persist to local storage.\n     */\n    export const persist = createSelector(\n        dark,\n        ghostPiece,\n        Swipe,\n        hand,\n        startLevel,\n        sound,\n        soundVolume,\n        music,\n        musicVolume,\n        musicType,\n        highScores,\n        keys,\n        (\n            dark,\n            ghost_piece,\n            swipe,\n            hand,\n            start_level,\n            sound,\n            sound_volume,\n            music,\n            music_volume,\n            music_type,\n            high_scores,\n            keys\n        ): AppPersist => {\n            return {\n                version: environment.version,\n                dark,\n                ghost_piece,\n                swipe,\n                hand,\n                start_level,\n                sound,\n                sound_volume,\n                music,\n                music_volume,\n                music_type,\n                high_scores,\n                keys\n            };\n        }\n    );\n}\n","import {createAction} from '@reduxjs/toolkit';\nimport {KeyBindings} from '../../components/particles/key_bindings.types';\nimport {APP_NAME, AppDialogType, AppPersist} from './app-model';\n\nexport namespace AppActions {\n    const prefix = (name: string) => `${APP_NAME}/${name}`;\n\n    /**\n     * Toggle dark  mode.\n     */\n    export const dark = createAction<boolean | undefined>(prefix('dark'));\n\n    /**\n     * Toggle ghost piece.\n     */\n    export const ghostPiece = createAction<boolean | undefined>(\n        prefix('ghost_piece')\n    );\n\n    /**\n     * Toggle controls based on player's hand\n     */\n    export const hand = createAction<'right' | 'left' | undefined>(\n        prefix('hand')\n    );\n    export const Swipe = createAction<'on' | 'off' | undefined>(\n        prefix('swipe')\n    );\n\n    /**\n     * Toggle playing of music.\n     */\n    export const music = createAction<boolean | undefined>(prefix('music'));\n\n    /**\n     * Changes the music track.\n     */\n    export const musicType = createAction<number>(prefix('music_type'));\n\n    /**\n     * Changes the music volume.\n     */\n    export const musicVolume = createAction<number>(prefix('music_volume'));\n\n    /**\n     * Toggle playing of sound effects.\n     */\n    export const sound = createAction<boolean | undefined>(prefix('sound'));\n\n    /**\n     * Changes the sound effects volume.\n     */\n    export const soundVolume = createAction<number>(prefix('sound_volume'));\n\n    /**\n     * Opens a dialog.\n     */\n    export const open = createAction<AppDialogType>(prefix('open'));\n\n    /**\n     * Closes currently open dialog.\n     */\n    export const close = createAction(prefix('close'));\n\n    /**\n     * Changes the player's starting level.\n     */\n    export const startLevel = createAction<number | undefined>(\n        prefix('start_level')\n    );\n\n    /**\n     * Adds a number to the high score board.\n     */\n    export const recordScore = createAction<number>(prefix('record_score'));\n\n    /**\n     * Resets the high score list.\n     */\n    export const resetScore = createAction(prefix('reset_store'));\n\n    /**\n     * Resets the app options.\n     */\n    export const resetOptions = createAction(prefix('reset_options'));\n\n    /**\n     * Patches the key bindings.\n     */\n    export const keys = createAction<{keyOf: keyof KeyBindings; code: string}>(\n        prefix('keys')\n    );\n\n    /**\n     * Restores saved state from localStorage.\n     */\n    export const persist = createAction<AppPersist>(prefix('persist'));\n}\n","import {createSlice} from '@reduxjs/toolkit';\nimport ReactGA from 'react-ga';\nimport {KEY_BINDINGS} from '../../components/particles/key_bindings.types';\nimport {environment} from '../../environment/environment';\nimport {AppActions} from './app-actions';\nimport {APP_INITIAL_STATE, APP_NAME} from './app-model';\n\nexport namespace AppState {\n    const track = (action: string, value?: number) => {\n        ReactGA.event({category: APP_NAME, action, value});\n    };\n\n    export const slice = createSlice({\n        name: APP_NAME,\n        initialState: APP_INITIAL_STATE,\n        reducers: {},\n        extraReducers: (builder) => {\n            builder\n                .addCase(AppActions.dark, (state, {payload}) => {\n                    state.dark =\n                        payload === undefined ? !state.dark : Boolean(payload);\n                    track('dark', state.dark ? 1 : 0);\n                })\n                .addCase(AppActions.ghostPiece, (state, {payload}) => {\n                    state.ghost_piece =\n                        payload === undefined\n                            ? !state.ghost_piece\n                            : Boolean(payload);\n                })\n                .addCase(AppActions.Swipe, (state, {payload}) => {\n                    state.swipe = payload === undefined ? 'off' : payload;\n                })\n                .addCase(AppActions.hand, (state, {payload}) => {\n                    state.hand = payload === undefined ? 'right' : payload;\n                })\n                .addCase(AppActions.music, (state, {payload}) => {\n                    state.music =\n                        payload === undefined ? !state.music : Boolean(payload);\n                    track('music', state.music ? 1 : 0);\n                })\n                .addCase(AppActions.musicVolume, (state, {payload}) => {\n                    state.music_volume = payload;\n                })\n                .addCase(AppActions.musicType, (state, {payload}) => {\n                    state.music_type = payload;\n                    track('music_type', state.music_type);\n                })\n                .addCase(AppActions.sound, (state, {payload}) => {\n                    state.sound =\n                        payload === undefined ? !state.sound : Boolean(payload);\n                    track('sound', state.sound ? 1 : 0);\n                })\n                .addCase(AppActions.soundVolume, (state, {payload}) => {\n                    state.sound_volume = payload;\n                })\n                .addCase(AppActions.keys, (state, {payload}) => {\n                    for (const key of KEY_BINDINGS) {\n                        if (state.keys[key] === payload.code) {\n                            state.keys[key] = '';\n                            break;\n                        }\n                    }\n                    state.keys[payload.keyOf] = payload.code;\n                })\n                .addCase(AppActions.open, (state, {payload}) => {\n                    state.dialog = payload;\n                })\n                .addCase(AppActions.close, (state) => {\n                    state.dialog = undefined;\n                })\n                .addCase(AppActions.startLevel, (state, {payload}) => {\n                    const max_levels = 25;\n                    const skip_levels = 5;\n                    if (payload === undefined) {\n                        if (state.start_level === 1) {\n                            state.start_level = skip_levels;\n                        } else {\n                            state.start_level =\n                                state.start_level < max_levels\n                                    ? state.start_level + skip_levels\n                                    : 1;\n                        }\n                    } else {\n                        state.start_level = Math.max(\n                            1,\n                            Math.min(payload, max_levels)\n                        );\n                    }\n                    track('start_level', state.start_level);\n                })\n                .addCase(AppActions.recordScore, (state, {payload}) => {\n                    const high_scores = Array.from(\n                        new Set([...state.high_scores, payload])\n                    );\n                    high_scores.sort((a, b) => a - b);\n                    state.high_scores = high_scores.reverse().slice(0, 9);\n                    track('high_scores', payload);\n                })\n                .addCase(AppActions.resetScore, (state) => {\n                    state.high_scores = [];\n                })\n                .addCase(AppActions.resetOptions, (state) => {\n                    track('reset_options');\n                    const {dark, dialog, high_scores} = state;\n                    return {\n                        ...APP_INITIAL_STATE,\n                        dark,\n                        dialog,\n                        high_scores\n                    };\n                })\n                .addCase(AppActions.persist, (state, {payload}) => {\n                    const {version, ...restore} = payload;\n                    if (version === environment.version) {\n                        return {\n                            ...state,\n                            ...restore\n                        };\n                    }\n                });\n        }\n    });\n}\n","import {Action, Middleware} from 'redux';\nimport {AppState} from './app-store';\n\n/**\n * Adds a snapshot of the store to each action.\n */\nexport const SnapShotMiddleware: Middleware = ({getState}) => {\n    return (next) => (action) => {\n        return next({...action, snapshot: getState()});\n    };\n};\n\n/**\n * Declares an action that contains a snapshot of the store.\n */\nexport interface AppAction<TType = unknown> extends Action<string> {\n    payload: TType;\n\n    snapshot?: Readonly<AppState>;\n\n    // Allows any extra properties to be defined in an action.\n    [extraProps: string]: any;\n}\n\n/**\n * Allows us to use the snapshot inside a reducer case.\n */\nexport declare interface SnapshotAction<TType = unknown> {\n    type: string;\n\n    (...args: any[]): AppAction<TType>;\n}\n","import {useMemo} from 'react';\n\n/**\n * Prevents React.DOM from replacing methods inside hooks.\n */\nconst ref: Record<string, unknown> = {\n    log: console.log,\n    error: console.error,\n    debug: console.debug\n};\n\nexport const logger = (prefix: string, name: string = 'log') => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const func = ref[name] || (console as any)[name];\n    return func.bind(console, `${prefix}:`);\n};\n\nexport const loggerDebug = (prefix: string) => logger(prefix, 'debug');\n\nexport const loggerError = (prefix: string) => logger(prefix, 'error');\n\nexport const useLogger = (prefix: string, name: string = 'log') => {\n    return useMemo(() => logger(prefix, name), [prefix, name]);\n};\n\nexport const useDebugger = (prefix: string) => {\n    return useMemo(() => loggerDebug(prefix), [prefix]);\n};\n\nexport const useError = (prefix: string) => {\n    return useMemo(() => loggerError(prefix), [prefix]);\n};\n","/**\n * Defines all the game pieces.\n */\nexport enum TetrominosType {\n    I = 'i',\n    O = 'o',\n    T = 't',\n    S = 's',\n    Z = 'z',\n    J = 'j',\n    L = 'l'\n}\n\n/**\n * An array of game piece letters.\n */\nexport const TETROMINOS_TYPES = Object.values(TetrominosType);\n","import {ReactElement} from 'react';\nimport {FaMusic, FaVolumeMute, FaVolumeUp} from 'react-icons/fa';\nimport {environment} from '../../environment/environment';\nimport {UiOption} from './ui/UiSelect';\n\nexport const AUDIO_FILES = [\n    `${environment.base}/audio/music/the-ice-cream-man.mp3`,\n    `${environment.base}/audio/music/8-bit-perplexion.mp3`,\n    `${environment.base}/audio/music/its-raining-pixels.mp3`,\n    `${environment.base}/audio/music/arcade-puzzler.mp3`\n];\n\nexport const SOUND_FINISHED = `${environment.base}/audio/sounds/power-down-13.mp3`;\nexport const SOUND_LEVEL = `${environment.base}/audio/sounds/retro-chip-power.mp3`;\nexport const SOUND_SCORE = `${environment.base}/audio/sounds/ui-quirky-19.mp3`;\nexport const SOUND_DROP = `${environment.base}/audio/sounds/zapsplat_bambo_swoosh.mp3`;\nexport const SOUND_LEVEL_10 = `${environment.base}/audio/sounds/zapsplat_level_up.mp3`;\n\nexport const PRELOAD_AUDIO = [\n    SOUND_FINISHED,\n    SOUND_LEVEL,\n    SOUND_SCORE,\n    SOUND_DROP,\n    SOUND_LEVEL_10\n];\n\nexport const VOLUME_OPTIONS: Array<UiOption<number>> = Array(11)\n    .fill(null)\n    .map((_, indx) => indx * 10)\n    .map((value) => ({label: `${value}%`, value}));\n\nexport const MUSIC_TYPES: Array<UiOption<number>> = AUDIO_FILES.map(\n    (_, value) => ({label: `Type ${value + 1}`, value})\n);\n\nexport const SOUND_ICON: Record<string, ReactElement> = {\n    true: <FaVolumeUp />,\n    false: <FaVolumeMute />\n};\n\nexport const SOUND_TOOLTIP: Record<string, string> = {\n    true: 'Turn sound off',\n    false: 'Turn sound on'\n};\n\nexport const MUSIC_ICON: Record<string, ReactElement> = {\n    true: <FaMusic />,\n    false: <FaVolumeMute />\n};\n\nexport const MUSIC_TOOLTIP: Record<string, string> = {\n    true: 'Turn music off',\n    false: 'Turn music on'\n};\n\nexport interface SoundTrack {\n    id: number;\n\n    src: string;\n}\n","import {TETROMINOS_TYPES} from '../../engine/game-tetrominos';\n\nexport const rand = (max: number) => Math.floor(Math.random() * max);\n\nexport const range = (min: number, max: number) => rand(max - min) + min;\n\nexport const randTetro = () => TETROMINOS_TYPES[rand(TETROMINOS_TYPES.length)];\n\nexport const randTetros = (count: number) =>\n    Array(count).fill(null).map(randTetro);\n","import {TetrominosType} from './game-tetrominos';\n\nexport const GHOST_OPACITY = 0.2;\n\n/**\n * Defines a single block on the screen. If the type is undefined the cell is\n * empty.\n */\nexport interface GameCell {\n    ghost?: number;\n\n    glow?: boolean;\n\n    type?: TetrominosType;\n}\n\n/**\n * Defines coordinates to change a single block in the buffer.\n */\nexport interface GameCellPatch extends GameCell {\n    x: number;\n\n    y: number;\n}\n\n/**\n * Generates a collection of empty cells.\n */\nexport function* gameBufferCells(width: number): IterableIterator<GameCell> {\n    for (let i = 0; i < width; i++) {\n        yield {};\n    }\n}\n","import {gameBufferCells, GameCell} from './game-cell';\n\n/**\n * Defines a row across the screen.\n */\nexport interface GameRow {\n    cells: Array<GameCell>;\n\n    removed?: boolean;\n}\n\n/**\n * Generates an empty collection of rows.\n */\nexport function* gameBufferRows(\n    width: number,\n    height: number\n): IterableIterator<GameRow> {\n    for (let i = 0; i < height; i++) {\n        yield {cells: Array.from(gameBufferCells(width))};\n    }\n}\n","import {GameBuffer} from './game-buffer';\nimport {GameTransform} from './game-transform';\n\n/**\n * Checks if a coordinate is inside the buffer.\n */\nexport function gameCollideBuffer(\n    {width, height}: GameBuffer,\n    x: number,\n    y: number\n): boolean {\n    return x < 0 || x >= width || y < 0 || y >= height;\n}\n\n/**\n * Checks if a coordinate hits a block in the buffer.\n */\nexport function gameCollideBlock(\n    {rows}: GameBuffer,\n    x: number,\n    y: number\n): boolean {\n    return rows[y].cells[x].type !== undefined;\n}\n\n/**\n * Checks if the coordinates of a piece cause any collision.\n */\nexport function gameCollision(\n    {x, y, piece}: GameTransform,\n    buffer: GameBuffer\n): boolean {\n    for (let i = 0; i < piece.length; i++) {\n        const [offset_x, offset_y] = piece[i];\n        const trans_x = x + offset_x;\n        const trans_y = y + offset_y;\n        if (\n            gameCollideBuffer(buffer, trans_x, trans_y) ||\n            gameCollideBlock(buffer, trans_x, trans_y)\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n","import {\n    GAME_PIECES,\n    GamePiece,\n    GamePieceRotations,\n    GamePlayer\n} from './game-player';\n\n/**\n * Defines a piece after it's been transformed.\n */\nexport interface GameTransform {\n    piece: GamePiece;\n\n    rotate: number;\n\n    x: number;\n\n    y: number;\n}\n\n/**\n * Defines player directions they can move/rotate.\n */\nexport enum GamePlayerDirection {\n    LEFT = 'left',\n    RIGHT = 'right'\n}\n\n/**\n * Defines a function that can move a piece.\n */\nexport type GameTranslator = (p: [number, number]) => [number, number];\n\n/**\n * Defines a function that can rotate a piece.\n */\nexport type GameRotator = (\n    pieces: GamePieceRotations,\n    rotate: number\n) => number;\n\n/**\n * Moves a piece up.\n */\nexport const translateUp: GameTranslator = ([x, y]: [number, number]): [\n    number,\n    number\n] => [x, y - 1];\n\n/**\n * Moves a piece down.\n */\nexport const translateDown: GameTranslator = ([x, y]: [number, number]): [\n    number,\n    number\n] => [x, y + 1];\n\n/**\n * Moves a piece left.\n */\nexport const translateLeft: GameTranslator = ([x, y]: [number, number]): [\n    number,\n    number\n] => [x - 1, y];\n\n/**\n * Moves a piece right.\n */\nexport const translateRight: GameTranslator = ([x, y]: [number, number]): [\n    number,\n    number\n] => [x + 1, y];\n\n/**\n * Does not move a piece.\n */\nexport const translateNoop: GameTranslator = (\n    coords: [number, number]\n): [number, number] => coords;\n\n/**\n * Rotates a piece left.\n */\nexport const rotateLeft: GameRotator = (\n    pieces: GamePieceRotations,\n    rotate: number\n): number => {\n    return rotate === pieces.length - 1 ? 0 : rotate + 1;\n};\n\n/**\n * Rotates a piece right.\n */\nexport const rotateRight: GameRotator = (\n    pieces: GamePieceRotations,\n    rotate: number\n): number => {\n    return rotate === 0 ? pieces.length - 1 : rotate - 1;\n};\n\n/**\n * Does not rotate a piece.\n */\nexport const rotateNoop: GameRotator = (\n    pieces: GamePieceRotations,\n    rotate: number\n): number => {\n    return rotate;\n};\n\n/**\n * Maps to a translate function.\n */\nexport const translateDirection = {\n    [GamePlayerDirection.LEFT]: translateLeft,\n    [GamePlayerDirection.RIGHT]: translateRight\n};\n\n/**\n * Maps to a rotate function.\n */\nexport const rotateDirection = {\n    [GamePlayerDirection.LEFT]: rotateLeft,\n    [GamePlayerDirection.RIGHT]: rotateRight\n};\n\n/**\n * Transforms a game piece by applying a position and rotation translator.\n */\nexport function gameTransform(\n    {x, y, type, rotate}: GamePlayer,\n    trans: GameTranslator,\n    rot: GameRotator\n): GameTransform {\n    const pieces = GAME_PIECES[type];\n    const trans_rot = rot(pieces, rotate);\n    const [trans_x, trans_y] = trans([x, y]);\n    return {\n        x: trans_x,\n        y: trans_y,\n        piece: pieces[trans_rot],\n        rotate: trans_rot\n    };\n}\n","import {GameBuffer, gameBufferRowSolid} from './game-buffer';\nimport {gameCollision} from './game-collision';\nimport {\n    PIECE_I,\n    PIECE_J,\n    PIECE_L,\n    PIECE_O,\n    PIECE_S,\n    PIECE_T,\n    PIECE_Z\n} from './game-pieces';\nimport {GameRow} from './game-row';\nimport {TetrominosType} from './game-tetrominos';\nimport {GameRotator, gameTransform, GameTranslator} from './game-transform';\n\n/**\n * Defines a player piece with location.\n */\nexport interface GamePlayer {\n    rotate: number;\n\n    type: TetrominosType;\n\n    x: number;\n\n    y: number;\n}\n\n/**\n * Defines a ghost piece location.\n */\nexport type GameGhost = Pick<GamePlayer, 'x' | 'y'>;\n\n/**\n * An array from the GameDesigner.\n */\nexport type GamePiece = Array<[number, number]>;\n\n/**\n * A single game piece in different rotations.\n */\nexport type GamePieceRotations = Array<GamePiece>;\n\n/**\n * Map of game pieces grouped by their type.\n */\nexport const GAME_PIECES: Record<string, GamePieceRotations> = {\n    [TetrominosType.O]: PIECE_O,\n    [TetrominosType.I]: PIECE_I,\n    [TetrominosType.S]: PIECE_S,\n    [TetrominosType.Z]: PIECE_Z,\n    [TetrominosType.L]: PIECE_L,\n    [TetrominosType.J]: PIECE_J,\n    [TetrominosType.T]: PIECE_T\n};\n\n/**\n * Creates a player piece in the center of the buffer. Piece is positioned\n * as close as possible to the top of the buffer.\n */\nexport function gamePlayerCreate(\n    type: TetrominosType,\n    width: number\n): GamePlayer {\n    const piece = GAME_PIECES[type][0];\n    const y = piece.some(([offset_x, offset_y]) => offset_y < 0) ? 1 : 0;\n    return {\n        x: Math.floor(width / 2),\n        y,\n        type,\n        rotate: 0\n    };\n}\n\n/**\n * Bakes the player's piece into the buffer.\n */\nexport function gamePlayerDrop(\n    {x, y, type, rotate}: GamePlayer,\n    buffer: GameBuffer\n): 0 | 1 | 2 | 3 | 4 {\n    const piece = GAME_PIECES[type][rotate];\n    const rows = new Set<GameRow>();\n    for (let i = 0; i < piece.length; i++) {\n        const [offset_x, offset_y] = piece[i];\n        const row = buffer.rows[y + offset_y];\n        row.cells[x + offset_x] = {type};\n        rows.add(row);\n    }\n    let lines = 0;\n    rows.forEach((row) => {\n        if (gameBufferRowSolid(row)) {\n            row.removed = true;\n            lines++;\n        }\n    });\n    return lines as 0 | 1 | 2 | 3 | 4;\n}\n\n/**\n * Moves/rotates a player only if there is no collision.\n */\nexport function gamePlayerTransform(\n    buffer: GameBuffer,\n    player: GamePlayer,\n    translator: GameTranslator,\n    rotator: GameRotator\n) {\n    const trans = gameTransform(player, translator, rotator);\n    if (!gameCollision(trans, buffer)) {\n        player.rotate = trans.rotate;\n        player.x = trans.x;\n        player.y = trans.y;\n    }\n}\n","import {GamePieceRotations} from './game-player';\n\nexport const PIECE_O: GamePieceRotations = [\n    [\n        [-1, 0],\n        [0, 0],\n        [-1, 1],\n        [0, 1]\n    ]\n];\n\nexport const PIECE_I: GamePieceRotations = [\n    [\n        [-2, 0],\n        [-1, 0],\n        [0, 0],\n        [1, 0]\n    ],\n    [\n        [0, -1],\n        [0, 0],\n        [0, 1],\n        [0, 2]\n    ]\n];\n\nexport const PIECE_S: GamePieceRotations = [\n    [\n        [0, -1],\n        [0, 0],\n        [1, 0],\n        [1, 1]\n    ],\n    [\n        [0, 0],\n        [1, 0],\n        [-1, 1],\n        [0, 1]\n    ]\n];\n\nexport const PIECE_Z: GamePieceRotations = [\n    [\n        [1, -1],\n        [0, 0],\n        [1, 0],\n        [0, 1]\n    ],\n    [\n        [-1, 0],\n        [0, 0],\n        [0, 1],\n        [1, 1]\n    ]\n];\n\nexport const PIECE_L: GamePieceRotations = [\n    [\n        [1, -1],\n        [-1, 0],\n        [0, 0],\n        [1, 0]\n    ],\n    [\n        [-1, -1],\n        [0, -1],\n        [0, 0],\n        [0, 1]\n    ],\n    [\n        [-1, 0],\n        [0, 0],\n        [1, 0],\n        [-1, 1]\n    ],\n    [\n        [0, -1],\n        [0, 0],\n        [0, 1],\n        [1, 1]\n    ]\n];\n\nexport const PIECE_J: GamePieceRotations = [\n    [\n        [-1, -1],\n        [-1, 0],\n        [0, 0],\n        [1, 0]\n    ],\n    [\n        [0, -1],\n        [0, 0],\n        [-1, 1],\n        [0, 1]\n    ],\n    [\n        [-1, 0],\n        [0, 0],\n        [1, 0],\n        [1, 1]\n    ],\n    [\n        [0, -1],\n        [1, -1],\n        [0, 0],\n        [0, 1]\n    ]\n];\n\nexport const PIECE_T: GamePieceRotations = [\n    [\n        [0, -1],\n        [-1, 0],\n        [0, 0],\n        [1, 0]\n    ],\n    [\n        [0, -1],\n        [-1, 0],\n        [0, 0],\n        [0, 1]\n    ],\n    [\n        [-1, 0],\n        [0, 0],\n        [1, 0],\n        [0, 1]\n    ],\n    [\n        [0, -1],\n        [0, 0],\n        [1, 0],\n        [0, 1]\n    ]\n];\n","import {gameBufferCells, GameCellPatch} from './game-cell';\nimport {gameBufferRows, GameRow} from './game-row';\n\n/**\n * Defines the game memory for all the blocks that are locked into place.\n */\nexport interface GameBuffer {\n    height: number;\n\n    rows: Array<GameRow>;\n\n    width: number;\n}\n\n/**\n * Creates a buffer with empty cells.\n */\nexport function gameBufferEmpty(width: number, height: number): GameBuffer {\n    const rows = Array.from(gameBufferRows(width, height));\n    return {rows, width, height};\n}\n\n/**\n * Copies cells into a buffer.\n */\nexport function gameBufferPatch(buffer: GameBuffer, patch: GameCellPatch) {\n    const {x, y, ...cell} = patch;\n    buffer.rows[y].cells[x] = cell;\n}\n\n/**\n * True if the entire row is filled with blocks.\n */\nexport function gameBufferRowSolid({cells}: GameRow): boolean {\n    return cells.every((cell) => Boolean(cell.type));\n}\n\n/**\n * True if some of the row is has blocks.\n */\nexport function gameBufferRowSome({cells}: GameRow): boolean {\n    return cells.some((cell) => Boolean(cell.type));\n}\n\n/**\n * Counts how many solid blocks on a row.\n */\nexport function gameBufferRowCount({cells}: GameRow): number {\n    return cells.filter((cell) => Boolean(cell.type)).length;\n}\n\n/**\n * Finds the index of the first removed row. Returns -1 if none found.\n */\nexport function gameBufferFindRemoved({rows}: GameBuffer): number {\n    return rows.findIndex((row) => row.removed);\n}\n\n/**\n * Removes a row and inserts a blank at the top of the buffer.\n */\nexport function gameBufferRemoveRow({rows, width}: GameBuffer, indx: number) {\n    rows.splice(indx, 1);\n    rows.unshift({cells: Array.from(gameBufferCells(width))});\n}\n","import {GameBuffer} from './game-buffer';\nimport {gameCollision} from './game-collision';\nimport {GameGhost, GamePlayer} from './game-player';\nimport {gameTransform, rotateNoop, translateDown} from './game-transform';\n\n/**\n * Drops a piece to find the ghost location.\n */\nexport const gameGhost = (\n    buffer: GameBuffer,\n    {x, y, type, rotate}: GamePlayer\n): GameGhost | undefined => {\n    let ghost: GameGhost | undefined;\n    while (true) {\n        const trans = gameTransform(\n            {x: ghost?.x || x, y: ghost?.y || y, type, rotate},\n            translateDown,\n            rotateNoop\n        );\n        if (gameCollision(trans, buffer)) {\n            return ghost;\n        } else {\n            ghost = {x: trans.x, y: trans.y};\n        }\n    }\n};\n","import {randTetros} from '../components/particles/utilities.types';\nimport {GAME_INITIAL_STATE, GameModel} from '../store/game/game-model';\nimport {gameBufferEmpty} from './game-buffer';\n\nexport const BUFFER_WIDTH = 10;\n\nexport const BUFFER_HEIGHT = 20;\n\nexport const gameReset = (next_max: number): GameModel => {\n    const buffer = gameBufferEmpty(BUFFER_WIDTH, BUFFER_HEIGHT);\n    return {\n        ...GAME_INITIAL_STATE,\n        next: randTetros(next_max),\n        buffer: buffer,\n        screen: Array(buffer.width * buffer.height).fill({}),\n        level: 1,\n        score: 0,\n        player: undefined,\n        ghost: undefined\n    };\n};\n","import {SOUND_LEVEL, SOUND_SCORE} from '../components/particles/audio.types';\nimport {GameModel} from '../store/game/game-model';\nimport {GAME_PIECES, GamePiece} from './game-player';\nimport {TetrominosType} from './game-tetrominos';\n\nconst LEVEL_1_PER_LINE = {\n    1: (n: number) => 40,\n    2: (n: number) => 100,\n    3: (n: number) => 300,\n    4: (n: number) => 1200\n};\n\nconst LEVEL_2_PER_LINE = {\n    1: (n: number) => 80,\n    2: (n: number) => 200,\n    3: (n: number) => 600,\n    4: (n: number) => 2400\n};\n\nconst LEVEL_3_PER_LINE = {\n    1: (n: number) => 120,\n    2: (n: number) => 300,\n    3: (n: number) => 900,\n    4: (n: number) => 3600\n};\n\nconst LEVEL_N_PER_LINE = {\n    1: (n: number) => 40 * (n + 1),\n    2: (n: number) => 100 * (n + 1),\n    3: (n: number) => 300 * (n + 1),\n    4: (n: number) => 1200 * (n + 1)\n};\n\n/**\n * Calculates the score for lines cleared.\n */\nexport const gamePointsLines = (\n    level: number,\n    lines: 0 | 1 | 2 | 3 | 4\n): number => {\n    if (lines !== 0) {\n        if (level === 1) {\n            return LEVEL_1_PER_LINE[lines](level);\n        } else if (level === 2) {\n            return LEVEL_2_PER_LINE[lines](level);\n        } else if (level >= 3 && level < 10) {\n            return LEVEL_3_PER_LINE[lines](level);\n        } else if (level >= 10) {\n            return LEVEL_N_PER_LINE[lines](level);\n        }\n    }\n    return 0;\n};\n\n/**\n * Calculates the score for soft dropping a piece.\n */\nexport const gamePointsPiece = (piece: GamePiece): number => {\n    return piece.length;\n};\n\n/**\n * Calculates the score for landing a piece.\n */\nexport const gamePoints = (\n    level: number,\n    type: TetrominosType,\n    lines: 0 | 1 | 2 | 3 | 4\n): number => {\n    const lineScore = gamePointsLines(level, lines);\n    const pieceScore = gamePointsPiece(GAME_PIECES[type][0]);\n    return lineScore + pieceScore;\n};\n\nexport type GameScore = Pick<\n    GameModel,\n    | 'score'\n    | 'level'\n    | 'lines_level'\n    | 'lines_level_up'\n    | 'lines_total'\n    | 'player_freeze'\n>;\n/**\n * Computes the score and level changes for a collision.\n */\nexport const gameScore = (\n    state: GameScore,\n    type: TetrominosType,\n    lines: 0 | 1 | 2 | 3 | 4\n): string | undefined => {\n    state.score += gamePoints(state.level, type, lines!);\n    // Calculate the number of lines to clear for the next level\n    const linesToClearForNextLevel = state.level + 1;\n\n    // Increment the lines cleared for the current level\n    state.lines_level += lines!;\n\n    // Check if the player has cleared enough lines to level up\n    if (state.lines_level >= linesToClearForNextLevel) {\n        state.lines_total += linesToClearForNextLevel;\n        state.lines_level = 0;\n        state.level++;\n        return SOUND_LEVEL;\n    }\n\n    if (!state.player_freeze) {\n        return SOUND_SCORE;\n    }\n};\n","import {GameBuffer} from './game-buffer';\nimport {GameCell, GHOST_OPACITY} from './game-cell';\nimport {GAME_PIECES, GameGhost, GamePlayer} from './game-player';\n\nconst MIN_GHOST = 0.05;\nconst MAX_GHOST = 0.2;\n\n/**\n * A flat collection of cells that makes rendering the screen quicker.\n */\nexport type GameScreen = Array<GameCell>;\n\n/**\n * Defines a function for a screen coordinate.\n */\nexport type GameScreenCoords = (x: number, y: number) => void;\n\n/**\n * Generates a flat array of cells and highlights cells that are part of a row\n * being removed.\n */\nexport function* gameScreenFlatten({\n    rows,\n    width,\n    height\n}: GameBuffer): IterableIterator<GameCell> {\n    for (let y = 0; y < height; y++) {\n        const {cells, removed: glow} = rows[y];\n        for (let x = 0; x < width; x++) {\n            yield {type: cells[x].type, glow};\n        }\n    }\n}\n\n/**\n * Renders the screen from a buffer and includes an optional player piece.\n */\nexport function gameScreenRender(\n    buffer: Readonly<GameBuffer>,\n    player?: Readonly<GamePlayer>,\n    ghost?: Readonly<GameGhost>,\n    streak_y?: number\n): GameScreen {\n    const {width} = buffer;\n    const screen = Array.from(gameScreenFlatten(buffer));\n    if (player) {\n        const writerGhost = gameScreenWriter(screen, width, (cell) => {\n            cell.type = player.type;\n            cell.ghost = GHOST_OPACITY;\n        });\n\n        const writerPlayer = gameScreenWriter(screen, width, (cell) => {\n            cell.type = player.type;\n            cell.ghost = undefined;\n        });\n\n        const dist = player!.y - streak_y!;\n        const percent = (y: number) => (y - streak_y!) / dist;\n        const writerDrop = gameScreenWriter(screen, width, (cell, x, y) => {\n            if (!cell.type) {\n                cell.type = player!.type;\n                cell.ghost = (MAX_GHOST - MIN_GHOST) * percent(y) + MIN_GHOST;\n            }\n        });\n\n        const piece = GAME_PIECES[player.type][player.rotate];\n\n        piece.forEach(([offset_x, offset_y]) => {\n            if (ghost) {\n                writerGhost(ghost.x + offset_x, ghost.y + offset_y);\n            }\n\n            writerPlayer(player.x + offset_x, player.y + offset_y);\n\n            if (streak_y !== undefined) {\n                for (let y = streak_y; y < player!.y; y++) {\n                    writerDrop(player!.x + offset_x, y + offset_y);\n                }\n            }\n        });\n    }\n    return screen;\n}\n\n/**\n * Creates a writer function that updates the screen.\n */\nexport function gameScreenWriter(\n    screen: GameScreen,\n    width: number,\n    write: (cell: GameCell, x: number, y: number) => void\n): GameScreenCoords {\n    return (x: number, y: number) => {\n        write(screen[y * width + x], x, y);\n    };\n}\n","import {GameModel} from '../store/game/game-model';\n\nexport type GameSound = Pick<GameModel, 'sound_tracks' | 'sound_id'>;\n\nexport const gameSound = (state: GameSound, src: string) => {\n    state.sound_tracks.push({\n        id: state.sound_id++,\n        src\n    });\n};\n","import {createAction} from '@reduxjs/toolkit';\nimport {GameBuffer} from '../../engine/game-buffer';\nimport {GameCellPatch} from '../../engine/game-cell';\nimport {GamePlayerDirection} from '../../engine/game-transform';\nimport {GAME_NAME, GameModel} from './game-model';\n\nexport namespace GameActions {\n    const prefix = (name: string) => `${GAME_NAME}/${name}`;\n\n    /**\n     * Toggles fast mode.\n     */\n    export const softDrop = createAction<boolean>(prefix('soft_drop'));\n\n    /**\n     * Performs a hard drop of the piece.\n     */\n    export const hardDrop = createAction(prefix('hard_drop'));\n\n    /**\n     * Starts a new game at a given level.\n     */\n    export const start = createAction<number>(prefix('start'));\n\n    /**\n     * Resumes running the game loop.\n     */\n    export const run = createAction(prefix('run'));\n\n    /**\n     * Pauses the game.\n     */\n    export const pause = createAction(prefix('pause'));\n\n    /**\n     * Resumes a paused game.\n     */\n    export const resume = createAction(prefix('resume'));\n\n    /**\n     * Quits the game.\n     */\n    export const quit = createAction(prefix('quit'));\n\n    /**\n     * Animation tick that moves game state forward.\n     */\n    export const tick = createAction(prefix('tick'));\n\n    /**\n     * Animation tick that moves game state forward.\n     */\n    export const finishing = createAction(prefix('finishing'));\n\n    /**\n     * Updates the screen with buffer changes.\n     */\n    export const render = createAction(prefix('render'));\n\n    /**\n     * Sets the current buffer.\n     * No width/height check is done.\n     */\n    export const bufferSet = createAction<GameBuffer>(prefix('bufferSet'));\n\n    /**\n     * Sets a buffer cell.\n     * For performance, no out of range check is done.\n     */\n    export const bufferPatch = createAction<Array<GameCellPatch>>(\n        prefix('bufferPatch')\n    );\n\n    /**\n     * Allows tests to externally modifying game state.\n     */\n    export const patch = createAction<Partial<GameModel>>(prefix('patch'));\n\n    /**\n     * Rotates the current piece.\n     */\n    export const rotate = createAction<GamePlayerDirection>(prefix('rotate'));\n\n    /**\n     * Moves the current piece towards left or right.\n     */\n    export const move = createAction<GamePlayerDirection>(prefix('move'));\n\n    /**\n     * Swaps a piece with the stash.\n     */\n    export const hold = createAction(prefix('hold'));\n\n    /**\n     * Removes a finished sound track from the play list.\n     */\n    export const soundTrack = createAction<number>(prefix('soundTrack'));\n\n    /**\n     * Sets the toast message.\n     */\n    export const toast = createAction<string | undefined>(prefix('toast'));\n}\n","import {ActionReducerMapBuilder, createSlice} from '@reduxjs/toolkit';\nimport ReactGA from 'react-ga';\nimport {\n    SOUND_DROP,\n    SOUND_FINISHED,\n    SOUND_LEVEL_10,\n    SOUND_SCORE\n} from '../../components/particles/audio.types';\nimport {randTetro} from '../../components/particles/utilities.types';\nimport {\n    gameBufferPatch,\n    gameBufferRowCount,\n    gameBufferRowSome\n} from '../../engine/game-buffer';\nimport {gameCollision} from '../../engine/game-collision';\nimport {gameGhost} from '../../engine/game-ghost';\nimport {gamePlayerCreate, gamePlayerTransform} from '../../engine/game-player';\nimport {gameReset} from '../../engine/game-reset';\nimport {gameScore} from '../../engine/game-score';\nimport {gameScreenRender} from '../../engine/game-screen';\nimport {gameSound} from '../../engine/game-sound';\nimport {\n    gameDropPlayer,\n    gameTickPlayer,\n    gameTickRows\n} from '../../engine/game-tick';\nimport {\n    GamePlayerDirection,\n    gameTransform,\n    rotateDirection,\n    rotateNoop,\n    translateDirection,\n    translateNoop\n} from '../../engine/game-transform';\nimport {SnapshotAction} from '../snapshot-middleware';\nimport {GameActions} from './game-actions';\nimport {\n    GAME_INITIAL_STATE,\n    GAME_NAME,\n    GameModel,\n    GameStatus\n} from './game-model';\n\nexport namespace GameState {\n    const track = (action: string, value?: number) => {\n        ReactGA.event({category: GAME_NAME, action, value});\n    };\n\n    export const slice = createSlice({\n        name: GAME_NAME,\n        initialState: GAME_INITIAL_STATE,\n        reducers: {},\n        extraReducers: (builder: ActionReducerMapBuilder<GameModel>) => {\n            builder\n                .addCase(GameActions.softDrop, (state, {payload}) => {\n                    state.soft_drop = payload;\n                })\n                .addCase(GameActions.start, (state, {payload}) => {\n                    track('start');\n                    const reset = gameReset(state.next_max);\n                    return {\n                        ...reset,\n                        level: payload,\n                        status: GameStatus.STARTING\n                    };\n                })\n                .addCase(GameActions.run, (state, action) => {\n                    state.status = GameStatus.RUNNING;\n                })\n                .addCase(GameActions.pause, (state, action) => {\n                    track('pause');\n                    state.status = GameStatus.PAUSED;\n                })\n                .addCase(GameActions.resume, (state, action) => {\n                    track('resume');\n                    state.status = GameStatus.STARTING;\n                })\n                .addCase(GameActions.quit, (state) => {\n                    track('quit');\n                    return gameReset(state.next_max);\n                })\n                .addCase(GameActions.render, (state, action) => {\n                    state.screen = gameScreenRender(\n                        state.buffer,\n                        state.player,\n                        state.ghost\n                    );\n                })\n                .addCase<SnapshotAction>(\n                    GameActions.tick,\n                    (state, {snapshot}) => {\n                        if (state.player) {\n                            const {collision, lines} = gameTickPlayer(\n                                state.buffer,\n                                state.player!\n                            );\n                            if (collision) {\n                                const old_level = state.level;\n                                const sound = gameScore(\n                                    state,\n                                    state.player.type,\n                                    lines!\n                                );\n                                if (\n                                    old_level !== state.level &&\n                                    state.level % 5 === 0\n                                ) {\n                                    state.toast_message = `Level ${state.level}`;\n                                    if (snapshot?.app.sound) {\n                                        gameSound(state, SOUND_LEVEL_10);\n                                    }\n                                }\n                                if (snapshot?.app.sound && sound) {\n                                    gameSound(state, sound);\n                                }\n                                state.player_freeze = false;\n                                state.hold_enable = true;\n                                state.player = undefined;\n                                state.ghost = undefined;\n                            } else {\n                                state.ghost = snapshot?.app.ghost_piece\n                                    ? gameGhost(state.buffer, state.player)\n                                    : undefined;\n                            }\n                        } else {\n                            if (!gameTickRows(state.buffer)) {\n                                const next = state.next.shift();\n                                if (state.next.length < state.next_max) {\n                                    state.next.push(randTetro());\n                                }\n                                const player = gamePlayerCreate(\n                                    next!,\n                                    state.buffer.width\n                                );\n                                const trans = gameTransform(\n                                    player,\n                                    translateNoop,\n                                    rotateNoop\n                                );\n                                if (gameCollision(trans, state.buffer)) {\n                                    snapshot?.app.sound &&\n                                        gameSound(state, SOUND_FINISHED);\n                                    state.restart_ticker++;\n                                    state.status = GameStatus.FINISHING;\n                                } else {\n                                    state.player = player;\n                                    state.ghost = snapshot?.app.ghost_piece\n                                        ? gameGhost(state.buffer, player)\n                                        : undefined;\n                                }\n                            }\n                        }\n                        state.screen = gameScreenRender(\n                            state.buffer,\n                            state.player,\n                            state.ghost\n                        );\n                    }\n                )\n                .addCase<SnapshotAction>(\n                    GameActions.finishing,\n                    (state, {snapshot}) => {\n                        const isRemoved = state.buffer.rows.find(\n                            (row) => row.removed\n                        );\n                        if (isRemoved) {\n                            state.score += gameBufferRowCount(isRemoved);\n                            gameTickRows(state.buffer);\n                        } else {\n                            const nextRow = state.buffer.rows.find((r) =>\n                                gameBufferRowSome(r)\n                            );\n                            if (nextRow) {\n                                nextRow.removed = true;\n                            } else {\n                                state.status = GameStatus.FINISHED;\n                            }\n                        }\n                        state.screen = gameScreenRender(\n                            state.buffer,\n                            state.player,\n                            state.ghost\n                        );\n                    }\n                )\n                .addCase<SnapshotAction>(\n                    GameActions.hardDrop,\n                    (state, {snapshot}) => {\n                        if (state.player && !state.player_freeze) {\n                            const origin_y = state.player.y;\n                            gameDropPlayer(state.buffer, state.player);\n                            state.restart_ticker++;\n                            state.screen = gameScreenRender(\n                                state.buffer,\n                                state.player,\n                                undefined,\n                                origin_y\n                            );\n                            state.player_freeze = true;\n                            state.ghost = undefined;\n                            if (snapshot?.app.sound) {\n                                gameSound(state, SOUND_DROP);\n                                gameSound(state, SOUND_SCORE);\n                            }\n                        }\n                    }\n                )\n                .addCase(GameActions.bufferSet, (state, {payload}) => {\n                    state.buffer = payload;\n                })\n                .addCase(GameActions.bufferPatch, (state, {payload}) => {\n                    payload.forEach((patch) =>\n                        gameBufferPatch(state.buffer, patch)\n                    );\n                })\n                .addCase<SnapshotAction<GamePlayerDirection>>(\n                    GameActions.rotate,\n                    (state, {payload, snapshot}) => {\n                        if (state.player && !state.player_freeze) {\n                            gamePlayerTransform(\n                                state.buffer,\n                                state.player,\n                                translateNoop,\n                                rotateDirection[payload]\n                            );\n                            state.ghost = snapshot?.app.ghost_piece\n                                ? gameGhost(state.buffer, state.player)\n                                : undefined;\n                            state.screen = gameScreenRender(\n                                state.buffer,\n                                state.player,\n                                state.ghost\n                            );\n                        }\n                    }\n                )\n                .addCase<SnapshotAction<GamePlayerDirection>>(\n                    GameActions.move,\n                    (state, {payload, snapshot}) => {\n                        if (state.player && !state.player_freeze) {\n                            gamePlayerTransform(\n                                state.buffer,\n                                state.player,\n                                translateDirection[payload],\n                                rotateNoop\n                            );\n                            state.ghost = snapshot?.app.ghost_piece\n                                ? gameGhost(state.buffer, state.player)\n                                : undefined;\n                            state.screen = gameScreenRender(\n                                state.buffer,\n                                state.player,\n                                state.ghost\n                            );\n                        }\n                    }\n                )\n                .addCase(GameActions.hold, (state) => {\n                    if (state.player) {\n                        if (state.hold) {\n                            state.next = [state.hold, ...state.next];\n                        }\n                        state.hold = state.player.type;\n                        state.hold_enable = false;\n                        state.player = undefined;\n                        state.ghost = undefined;\n                        state.restart_ticker++;\n                        state.screen = gameScreenRender(\n                            state.buffer,\n                            state.player,\n                            state.ghost\n                        );\n                    }\n                })\n                .addCase(GameActions.soundTrack, (state, {payload}) => {\n                    state.sound_tracks = state.sound_tracks.filter(\n                        ({id}) => id !== payload\n                    );\n                })\n                .addCase<SnapshotAction<Partial<GameModel>>>(\n                    GameActions.patch,\n                    (state, {payload, snapshot}) => {\n                        const ghost =\n                            snapshot?.app.ghost_piece && state.player\n                                ? gameGhost(state.buffer, state.player)\n                                : undefined;\n                        const screen = gameScreenRender(\n                            state.buffer,\n                            state.player,\n                            ghost\n                        );\n                        return {\n                            ...state,\n                            ...payload,\n                            ghost,\n                            screen\n                        };\n                    }\n                );\n        }\n    });\n}\n","import {\n    GameBuffer,\n    gameBufferFindRemoved,\n    gameBufferRemoveRow\n} from './game-buffer';\nimport {gameCollision} from './game-collision';\nimport {GamePlayer, gamePlayerDrop} from './game-player';\nimport {gameTransform, rotateNoop, translateDown} from './game-transform';\n\n/**\n * Results of moving the player's piece.\n */\nexport interface GameTickResult {\n    /**\n     * Was the piece dropped into the buffer?\n     */\n    collision: boolean;\n\n    /**\n     * (when collision is true) number of lines flagged for removal.\n     */\n    lines?: 0 | 1 | 2 | 3 | 4;\n}\n\n/**\n * Performs a single frame of animation of the player piece moving.\n */\nexport function gameTickPlayer(\n    buffer: GameBuffer,\n    player: GamePlayer\n): GameTickResult {\n    const trans = gameTransform(player, translateDown, rotateNoop);\n    if (gameCollision(trans, buffer)) {\n        const lines = gamePlayerDrop(player, buffer);\n        return {collision: true, lines};\n    }\n    player.y = trans.y;\n    return {collision: false};\n}\n\n/**\n * Drops the play down all the way until collision.\n */\nexport function gameDropPlayer(buffer: GameBuffer, player: GamePlayer) {\n    while (true) {\n        const trans = gameTransform(player, translateDown, rotateNoop);\n        if (gameCollision(trans, buffer)) {\n            break;\n        } else {\n            player.y = trans.y;\n        }\n    }\n}\n\n/**\n * Performs a single frame of animation of the rows collapsing down by gravity.\n */\nexport function gameTickRows(buffer: GameBuffer): boolean {\n    const removeIndex = gameBufferFindRemoved(buffer);\n    if (removeIndex === -1) {\n        return false;\n    }\n    gameBufferRemoveRow(buffer, removeIndex);\n    return true;\n}\n","import {combineReducers, Store} from '@reduxjs/toolkit';\nimport {Reducer} from 'redux';\nimport {loggerDebug} from '../components/particles/hooks/useLogger';\nimport {AppState} from './app/app-state';\nimport {GameState} from './game/game-state';\n\nexport const getRootReducer = () => {\n    return combineReducers({\n        app: AppState.slice.reducer,\n        game: GameState.slice.reducer\n    });\n};\n\nexport function acceptHotReload(store: Store, rootReducer: Reducer) {\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\n        const log = loggerDebug(acceptHotReload.name);\n        log('enabled');\n        module.hot.accept(\n            ['./app/app-state', './game/game-state'],\n            (updatedDependencies) => {\n                log(updatedDependencies);\n                store.replaceReducer(rootReducer);\n            }\n        );\n    }\n}\n","import {configureStore} from '@reduxjs/toolkit';\nimport {useDispatch} from 'react-redux';\nimport {environment} from '../environment/environment';\nimport {SnapShotMiddleware} from './snapshot-middleware';\nimport {acceptHotReload, getRootReducer} from './root-reducer';\n\n/**\n * Configures the Redux store with a default state.\n */\nexport const configureAppStore = (preloadedState = {}) => {\n    const rootReducer = getRootReducer();\n\n    const store = configureStore({\n        devTools: {\n            name: environment.brandName,\n            maxAge: 100\n        },\n        preloadedState,\n        reducer: rootReducer,\n        middleware: (getDefaultMiddleware) => {\n            return [...getDefaultMiddleware(), SnapShotMiddleware];\n        }\n    });\n\n    acceptHotReload(store, rootReducer);\n\n    return store;\n};\n\n/**\n * The combined reducers create a complex Redux store type. So we create a\n * variable that TypeScript can use to extra rich types about the store.\n */\nlet appStore: ReturnType<typeof configureAppStore>;\n\nexport type AppStore = ReturnType<typeof configureAppStore>;\n\n/**\n * Contains the type for the root state that holds all the reducers.\n */\nexport type AppState = ReturnType<typeof appStore.getState>;\n\n/**\n * Types of dispatches including middleware.\n */\nexport type AppDispatch = typeof appStore.dispatch;\n\n/**\n * Creates a dispatch function that returns proper typing for async Trunk\n * actions.\n */\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\n/**\n * Defines a store configure function after types are declared. This allows\n * the function to have typing for the state parameter.\n */\nexport const getAppStore = (state?: AppState) => configureAppStore(state);\n","import {Tooltip} from '@material-ui/core';\nimport classNames from 'classnames';\nimport {ButtonHTMLAttributes, FC, useMemo, useRef} from 'react';\nimport {useUiTheme} from '../contexts/UiThemeContext';\nimport {ClassNameProps} from '../particles.types';\nimport './UiButton.css';\n\nexport enum UiButtonShape {\n    NORMAL,\n    ROUND,\n    LEFT,\n    RIGHT,\n    UP,\n    DOWN\n}\n\nexport interface UiButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    active?: boolean;\n\n    onPress?: () => void;\n\n    onRelease?: () => void;\n\n    preventFocus?: boolean;\n\n    primary?: boolean;\n\n    secondary?: boolean;\n\n    shape?: UiButtonShape;\n\n    toolTip?: string;\n}\n\nexport const UiButton: FC<UiButtonProps & ClassNameProps> = ({\n    active,\n    disabled,\n    preventFocus,\n    primary,\n    secondary,\n    toolTip,\n    shape = UiButtonShape.NORMAL,\n    className,\n    children,\n    onMouseDown,\n    onMouseUp,\n    onPress,\n    onRelease,\n    ...props\n}) => {\n    const touching = useRef(false);\n    const pressing = useRef(false);\n    const {transparent} = useUiTheme();\n    const classes = useMemo(() => {\n        return classNames(className, 'ui-button', {\n            'ui-button-standard': transparent,\n            'ui-button-trans': transparent,\n            'ui-shape-round': shape === UiButtonShape.ROUND,\n            'ui-shape-normal': shape === UiButtonShape.NORMAL,\n            'ui-shape-left': shape === UiButtonShape.LEFT,\n            'ui-shape-right': shape === UiButtonShape.RIGHT,\n            'ui-shape-up': shape === UiButtonShape.UP,\n            'ui-shape-down': shape === UiButtonShape.DOWN,\n            'text-primary': primary,\n            'text-secondary': secondary,\n            active\n        });\n    }, [active, primary, secondary, shape, transparent, className]);\n    return (\n        <Tooltip title={toolTip || ''}>\n            <button\n                className={classes}\n                disabled={disabled}\n                onTouchStart={() => {\n                    touching.current = true;\n                    if (!disabled) {\n                        pressing.current = true;\n                        onPress && onPress();\n                    }\n                }}\n                onTouchEnd={() => {\n                    pressing.current = false;\n                    onRelease && onRelease();\n                }}\n                onMouseDown={(e) => {\n                    if (preventFocus) {\n                        e.preventDefault();\n                    }\n                    if (!touching.current && !disabled) {\n                        pressing.current = true;\n                        onPress && onPress();\n                    }\n                }}\n                onMouseUp={(e) => {\n                    if (!touching.current) {\n                        pressing.current = false;\n                        onRelease && onRelease();\n                    }\n                }}\n                onMouseLeave={(e) => {\n                    if (!touching.current && pressing.current) {\n                        pressing.current = false;\n                        onRelease && onRelease();\n                    }\n                }}\n                {...props}\n            >\n                {children}\n            </button>\n        </Tooltip>\n    );\n};\n","import {Dialog, useMediaQuery} from '@material-ui/core';\nimport classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {FaArrowLeft} from 'react-icons/fa';\nimport {useModalView} from '../hooks/useModalView';\nimport {ClassNameProps} from '../particles.types';\nimport './UiDialog.css';\n\nexport interface UiDialogProps {\n    large?: boolean;\n\n    onClose?: () => void;\n\n    open: boolean;\n\n    title: string;\n}\n\nexport const UiDialog: FC<UiDialogProps & ClassNameProps> = ({\n    onClose = () => null,\n    open,\n    title,\n    large,\n    children,\n    className\n}) => {\n    const smallScreen = useMediaQuery('(max-width:375px)');\n    const fullScreen = useMemo(\n        () => large && smallScreen,\n        [large, smallScreen]\n    );\n\n    useModalView(open, title);\n\n    return (\n        <Dialog\n            className={classNames('ui-dialog', {fullScreen})}\n            PaperProps={{\n                className: classNames('ui-dialog-paper', className, {\n                    'border-primary': !fullScreen,\n                    fullScreen\n                })\n            }}\n            open={open}\n            onClose={onClose}\n            fullScreen={fullScreen}\n        >\n            <div className=\"ui-dialog-title text-primary\">\n                {title}\n                {large && (\n                    <button\n                        className=\"ml:hidden flex absolute top-0 -left-3 p-3 dark:text-white text-black text-sm\"\n                        onClick={onClose}\n                    >\n                        <FaArrowLeft />\n                    </button>\n                )}\n            </div>\n            <div className=\"flex flex-col\">{children}</div>\n        </Dialog>\n    );\n};\n","import {useEffect} from 'react';\nimport ReactGA from 'react-ga';\nimport {toKebabCase} from '../strings.types';\n\nexport const useModalView = (open: boolean, title: string) => {\n    useEffect(() => {\n        if (open) {\n            ReactGA.modalview(toKebabCase(title));\n        }\n    }, [open, title]);\n};\n","/**\n * \"document_id\" -> \"document id\"\n * \"documentId\" -> \"document id\"\n */\nexport const toSpaces = (str: string): string =>\n    str && str.replace(/[-_]/g, ' ').replace(/([A-Z])/g, ' $1');\n\n/**\n * \"Hello World\" -> \"hello-world\"\n */\nexport const toKebabCase = (str: string): string =>\n    str &&\n    str\n        .match(\n            /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n        )!\n        .map((x) => x.toLowerCase())\n        .join('-');\n","import {PayloadAction} from '@reduxjs/toolkit';\nimport {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiDialog} from '../../particles/ui/UiDialog';\n\nexport interface AppDialogControl {\n    closeAction?: PayloadAction<any>;\n\n    selectOpen: any;\n}\n\nexport interface AppDialogProps {\n    large?: boolean;\n\n    title: string;\n}\n\nexport const AppDialog: FC<AppDialogProps & AppDialogControl & ClassNameProps> =\n    ({\n        closeAction = AppActions.close(),\n        selectOpen,\n        title,\n        large,\n        children,\n        className\n    }) => {\n        const dispatch = useAppDispatch();\n        const open = useSelector(selectOpen);\n        return (\n            <UiDialog\n                className={className}\n                open={Boolean(open)}\n                title={title}\n                large={large}\n                onClose={() => dispatch(closeAction)}\n            >\n                {children}\n            </UiDialog>\n        );\n    };\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameCredit {\n    desc: string;\n\n    title: string;\n\n    url: string;\n}\n\nexport interface GameCreditsProps {\n    credits: Array<GameCredit>;\n}\n\nexport const GameCredits: FC<GameCreditsProps & ClassNameProps> = ({\n    credits,\n    className\n}) => {\n    return (\n        <div className={classNames(className, 'flex flex-col text-xs -mb-3')}>\n            {credits.map(({title, desc, url}, indx) => (\n                <div className=\"flex flex-col mb-3\" key={indx}>\n                    <div>{title}:</div>\n                    <a href={url} className=\"text-primary hover:underline\">\n                        {desc}\n                    </a>\n                </div>\n            ))}\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {environment} from '../../../environment/environment';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {GameCredit, GameCredits} from '../../molecules/game/GameCredits';\n\nconst gameCredits: Array<GameCredit> = [\n    {\n        title: 'UX Design by',\n        desc: 'Zayn Assalam',\n        url: 'https://dribbble.com/shots/14684127-Tetris-Mobile-App'\n    },\n    {\n        title: 'Programmed by',\n        desc: 'Nick Foscarini',\n        url: 'https://www.linkedin.com/in/nick-foscarini/'\n    },\n    {\n        title: 'Built with',\n        desc: 'ReactJS',\n        url: 'https://reactjs.org/'\n    },\n    {\n        title: 'States managed by',\n        desc: 'Redux Toolkit',\n        url: 'https://redux-toolkit.js.org/'\n    },\n    {\n        title: 'Styled with',\n        desc: 'tailwindcss',\n        url: 'https://tailwindcss.com/'\n    },\n    {\n        title: 'Source code',\n        desc: 'GitHub',\n        url: environment.github\n    }\n];\n\nexport const CreditsDialog: FC<Partial<AppDialogControl>> = ({\n    selectOpen = AppSelectors.isOpen(AppDialogType.CREDITS)\n}) => {\n    return (\n        <AppDialog\n            className=\"max-w-[12rem]\"\n            title=\"Credits\"\n            selectOpen={selectOpen}\n        >\n            <GameCredits credits={gameCredits} />\n        </AppDialog>\n    );\n};\n","import {createContext, FC, useContext, useMemo} from 'react';\n\nexport interface UiTheme {\n    large: boolean;\n\n    transparent: boolean;\n}\n\nconst UiThemeContext = createContext<UiTheme>({\n    transparent: false,\n    large: false\n});\n\nexport const useUiTheme = () => useContext(UiThemeContext);\n\nexport const UiThemeProvider: FC<UiTheme> = ({\n    transparent,\n    large,\n    children\n}) => {\n    const value = useMemo(() => ({transparent, large}), [transparent, large]);\n    return (\n        <UiThemeContext.Provider value={value}>\n            {children}\n        </UiThemeContext.Provider>\n    );\n};\n","import {PayloadAction} from '@reduxjs/toolkit';\nimport classNames from 'classnames';\nimport React, {FC, ReactElement} from 'react';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton} from '../../particles/ui/UiButton';\n\nexport interface AppBarTool {\n    action: PayloadAction<any>;\n\n    active?: boolean;\n\n    icon: ReactElement;\n\n    toolTip: string;\n}\n\nexport interface AppBarProps {\n    tools: Array<AppBarTool>;\n}\n\nexport const AppBar: FC<AppBarProps & ClassNameProps> = ({\n    tools,\n    className\n}) => {\n    const dispatch = useAppDispatch();\n    return (\n        <div className={classNames(className, 'flex justify-between w-full')}>\n            {tools.map(({icon, toolTip, active, action}, indx) => (\n                <UiButton\n                    key={indx}\n                    className=\"rounded-full text-[12px] p-2\"\n                    primary={true}\n                    active={active}\n                    onClick={() => dispatch(action)}\n                    toolTip={toolTip}\n                >\n                    {icon}\n                </UiButton>\n            ))}\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {useMaxDigits} from '../../particles/hooks/useMaxDigits';\nimport {useSpaces} from '../../particles/hooks/useSpaces';\nimport {useZeros} from '../../particles/hooks/useZeros';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameDigitsProps {\n    digits: number;\n\n    primary?: boolean;\n\n    value: number;\n}\n\nexport const GameDigits: FC<GameDigitsProps & ClassNameProps> = ({\n    value,\n    digits,\n    primary = true,\n    className\n}) => {\n    const zeros = useZeros(digits);\n    const maxDigits = useMaxDigits(value, digits);\n    const spaces = useSpaces(digits - maxDigits.length);\n    const color = useMemo(\n        () => ({\n            'text-primary': primary,\n            'text-secondary': !primary\n        }),\n        [primary]\n    );\n\n    return (\n        <div\n            className={classNames(\n                className,\n                'flex relative leading-none font-digits p-2'\n            )}\n        >\n            <div className=\"relative mx-auto\">\n                <div className={classNames('opacity-20', color)}>{zeros}</div>\n                <div className={classNames('absolute top-0 left-0', color)}>\n                    <span dangerouslySetInnerHTML={spaces} />\n                    <span>{maxDigits}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import {useMemo} from 'react';\n\nexport const useSpaces = (\n    length: number\n): {\n    __html: string;\n} => {\n    return useMemo(() => ({__html: '&nbsp;'.repeat(length)}), [length]);\n};\n","import {useMemo} from 'react';\n\n/**\n * Returns a string filled with 0s.\n */\nexport const useZeros = (digits: number) => {\n    return useMemo(() => '0'.repeat(digits), [digits]);\n};\n","import {useMemo} from 'react';\n\n/**\n * Returns a number as a string with a max number of digits. Rendering\n * 9s if the number is too large.\n */\nexport const useMaxDigits = (value: number, maxDigits: number) => {\n    return useMemo(() => {\n        const str = value.toString();\n        return str.length > maxDigits ? '9'.repeat(maxDigits) : str;\n    }, [value, maxDigits]);\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {GameDigits} from '../../atoms/game/GameDigits';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameScoreProps {\n    rank: number;\n\n    score: number;\n}\n\nexport const GameScore: FC<GameScoreProps & ClassNameProps> = ({\n    rank,\n    score,\n    className\n}) => {\n    return (\n        <div\n            className={classNames(\n                className,\n                'flex font-mono items-baseline space-x-4'\n            )}\n        >\n            <div className=\"text-light\">#{rank}</div>\n            <GameDigits digits={6} value={score} />\n        </div>\n    );\n};\n","import {PayloadAction} from '@reduxjs/toolkit';\nimport classNames from 'classnames';\nimport {FC, useEffect, useMemo} from 'react';\nimport {FaHome} from 'react-icons/fa';\nimport {GiPodium} from 'react-icons/gi';\nimport {VscDebugRestart} from 'react-icons/vsc';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppBar} from '../../atoms/app/AppBar';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {GameScore} from './GameScore';\n\nexport interface GameFinishProps {\n    actionHighScores?: PayloadAction;\n\n    actionHome?: PayloadAction;\n\n    actionRestart?: PayloadAction<number>;\n}\n\nexport const GameFinish: FC<GameFinishProps & ClassNameProps> = ({\n    actionHome = GameActions.quit(),\n    actionRestart = GameActions.start(1),\n    actionHighScores = AppActions.open(AppDialogType.HIGH_SCORES),\n    className\n}) => {\n    const score = useSelector(GameSelectors.score);\n    const highScores = useSelector(AppSelectors.highScores);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(AppActions.recordScore(score));\n    }, [dispatch, score]);\n\n    const tools = useMemo(() => {\n        return [\n            {\n                icon: <FaHome />,\n                toolTip: 'Home',\n                action: actionHome\n            },\n            {\n                icon: <VscDebugRestart />,\n                toolTip: 'Restart',\n                action: actionRestart\n            },\n            {\n                icon: <GiPodium />,\n                toolTip: 'High Scores',\n                action: actionHighScores\n            }\n        ];\n    }, [actionHome, actionRestart, actionHighScores]);\n\n    const rank = useMemo(() => {\n        return highScores.indexOf(score) + 1;\n    }, [highScores, score]);\n\n    return (\n        <div className={classNames(className, 'flex flex-col text-2xl')}>\n            <div className=\"flex flex-col ml-auto mr-auto\">\n                <div className=\"font-mono text-center\">Your Score</div>\n                <GameScore rank={rank} score={score} />\n                <div className=\"font-mono text-center mt-5\">Your Best</div>\n                <GameScore rank={1} score={highScores[0] || 0} />\n            </div>\n            <AppBar className=\"mt-5\" tools={tools} />\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {GameFinish} from '../../molecules/game/GameFinish';\n\nexport interface FinishDialogProps {\n    selectStart?: () => number;\n}\n\nexport const FinishDialog: FC<FinishDialogProps & Partial<AppDialogControl>> =\n    ({\n        selectStart = AppSelectors.startLevel,\n        selectOpen = GameSelectors.finished\n    }) => {\n        const level = useSelector(selectStart);\n        return (\n            <AppDialog\n                className=\"max-w-[12rem]\"\n                title=\"Game Over\"\n                selectOpen={selectOpen}\n            >\n                <GameFinish actionRestart={GameActions.start(level)} />\n            </AppDialog>\n        );\n    };\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {GameScore} from './GameScore';\n\nexport interface GameHighScoresProps {\n    selectScores?: any;\n}\n\nexport const GameHighScores: FC<GameHighScoresProps & ClassNameProps> = ({\n    selectScores = AppSelectors.highScores,\n    className\n}) => {\n    const highScores: Array<number> = useSelector(selectScores);\n    const scores = useMemo(() => {\n        return [...(highScores || []), ...Array(10).fill(0)].slice(0, 9);\n    }, [highScores]);\n    return (\n        <div className={classNames(className, 'flex flex-col text-2xl')}>\n            {scores.map((score, indx) => (\n                <GameScore key={indx} rank={indx + 1} score={score} />\n            ))}\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {GameHighScores} from '../../molecules/game/GameHighScores';\n\nexport const HighScoresDialog: FC<Partial<AppDialogControl>> = ({\n    selectOpen = AppSelectors.isOpen(AppDialogType.HIGH_SCORES)\n}) => {\n    return (\n        <AppDialog\n            className=\"max-w-[12rem]\"\n            title=\"High Scores\"\n            selectOpen={selectOpen}\n        >\n            <GameHighScores className=\"ml-auto mr-auto\" />\n        </AppDialog>\n    );\n};\n","import {useCallback, useMemo} from 'react';\nimport {UiButton} from './UiButton';\n\nexport interface UiOption<TType> {\n    label: string;\n\n    value: TType;\n}\n\nexport interface UiSelectProps<TType> {\n    onChange: (value: TType) => void;\n\n    options: Array<UiOption<TType>>;\n\n    value: TType;\n}\n\nexport function UiSelect<TType>({\n    onChange,\n    options,\n    value\n}: UiSelectProps<TType>) {\n    const indx = useMemo(\n        () => options.findIndex((option) => option.value === value),\n        [value, options]\n    );\n\n    const increase = useCallback(() => {\n        const i = Math.min(options.length - 1, indx + 1);\n        onChange(options[i].value);\n    }, [onChange, options, indx]);\n\n    const decrease = useCallback(() => {\n        const i = Math.max(0, indx - 1);\n        onChange(options[i].value);\n    }, [onChange, options, indx]);\n\n    return (\n        <div className=\"flex\">\n            <UiButton className=\"px-4\" onClick={decrease} disabled={indx <= 0}>\n                -\n            </UiButton>\n            <div className=\"flex-grow text-center\">{options[indx]?.label}</div>\n            <UiButton\n                className=\"px-4\"\n                onClick={increase}\n                disabled={indx >= options.length - 1}\n            >\n                +\n            </UiButton>\n        </div>\n    );\n}\n","import React, {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {\n    MUSIC_ICON,\n    MUSIC_TYPES,\n    SOUND_ICON,\n    VOLUME_OPTIONS\n} from '../../particles/audio.types';\nimport {UiButton} from '../../particles/ui/UiButton';\nimport {UiSelect} from '../../particles/ui/UiSelect';\n\nexport const OptionsAudio: FC = () => {\n    const music = useSelector(AppSelectors.music);\n    const musicType = useSelector(AppSelectors.musicType);\n    const musicVolume = useSelector(AppSelectors.musicVolume);\n    const sound = useSelector(AppSelectors.sound);\n    const soundVolume = useSelector(AppSelectors.soundVolume);\n    const dispatch = useAppDispatch();\n    return (\n        <>\n            <div>Sound Fx</div>\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={sound}\n                onClick={() => dispatch(AppActions.sound())}\n            >\n                {SOUND_ICON[sound.toString()]}\n            </UiButton>\n            <div>Sound Fx Volume</div>\n            <UiSelect\n                options={VOLUME_OPTIONS}\n                value={soundVolume}\n                onChange={(value) => dispatch(AppActions.soundVolume(value))}\n            />\n            <div>Music</div>\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={music}\n                onClick={() => dispatch(AppActions.music())}\n            >\n                {MUSIC_ICON[music.toString()]}\n            </UiButton>\n            <div>Music Volume</div>\n            <UiSelect\n                options={VOLUME_OPTIONS}\n                value={musicVolume}\n                onChange={(value) => dispatch(AppActions.musicVolume(value))}\n            />\n            <div>Music Type</div>\n            <UiSelect\n                options={MUSIC_TYPES}\n                value={musicType}\n                onChange={(value) => dispatch(AppActions.musicType(value))}\n            />\n        </>\n    );\n};\n","import React, {FC, useCallback} from 'react';\nimport {FaCheck, FaTimes} from 'react-icons/fa';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {UiButton} from '../../particles/ui/UiButton';\nimport {GameControls} from '../game/GameControls';\n\nexport const OptionsGame: FC = () => {\n    const ghostPiece = useSelector(AppSelectors.ghostPiece);\n    const hand = useSelector(AppSelectors.hand);\n    const Swipe = useSelector(AppSelectors.Swipe);\n    const dispatch = useAppDispatch();\n\n    // Define callback functions for left-hand and right-hand button clicks\n    const toggleHand = useCallback(() => {\n        dispatch(AppActions.hand(hand === 'left' ? 'right' : 'left'));\n    }, [hand, dispatch]);\n    const toggleSwipe = useCallback(() => {\n        dispatch(AppActions.Swipe(Swipe === 'on' ? 'off' : 'on'));\n    }, [Swipe, dispatch]);\n\n    return (\n        <>\n            <div>Ghost Piece</div>\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={ghostPiece}\n                onClick={() => dispatch(AppActions.ghostPiece())}\n            >\n                {ghostPiece ? <FaCheck /> : <FaTimes />}\n            </UiButton>\n            <div>Left Hand</div>\n            {/* <GameControls Click={toggleHand} // Pass the left-hand click callback\n            /> */}\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={hand === 'left'}\n                onClick={toggleHand}\n            >\n                {hand === 'left' ? <FaCheck /> : <FaTimes />}\n            </UiButton>\n            <div>Right Hand</div>\n            {/* <GameControls\n                onRightHandClick={handleRightHandClick} // Pass the right-hand click callback\n            /> */}\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={hand === 'right'}\n                onClick={toggleHand}\n            >\n                {hand === 'right' ? <FaCheck /> : <FaTimes />}\n            </UiButton>\n            <div>Swipe</div>\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={Swipe === 'on'}\n                onClick={toggleSwipe}\n            >\n                {Swipe === 'on' ? <FaCheck /> : <FaTimes />}\n            </UiButton>\n            <div>D-Pad</div>\n            <UiButton\n                className=\"flex rounded-full text-[12px] p-2 justify-center\"\n                active={Swipe === 'off'}\n                onClick={toggleSwipe}\n            >\n                {Swipe === 'off' ? <FaCheck /> : <FaTimes />}\n            </UiButton>\n        </>\n    );\n};\n","import {FC, useMemo} from 'react';\nimport {toSpaces} from '../../particles/strings.types';\nimport {UiButton} from '../../particles/ui/UiButton';\n\nconst CODE_PREFIXES = ['Digit', 'Key', 'Arrow'];\n\nexport interface AppKeyBindingProps {\n    keyCode: string;\n\n    label: string;\n\n    onClick: () => void;\n}\n\nexport const AppKeyBinding: FC<AppKeyBindingProps> = ({\n    label,\n    keyCode,\n    onClick\n}) => {\n    const str = useMemo(() => {\n        const code = CODE_PREFIXES.reduce((str, prefix) => {\n            return str.replace(prefix, '').trim();\n        }, keyCode);\n        return toSpaces(code);\n    }, [keyCode]);\n\n    return (\n        <>\n            <div>{label}</div>\n            <UiButton className=\"w-full\" onClick={onClick}>\n                {str}\n            </UiButton>\n        </>\n    );\n};\n","import {FC, useEffect} from 'react';\nimport {\n    KEY_BINDING_LABELS,\n    KeyBindings\n} from '../../particles/key_bindings.types';\n\nexport interface AppKeyPickerProps {\n    keyOf: keyof KeyBindings;\n\n    onChange: (code: string) => void;\n}\n\nexport const AppKeyPicker: FC<AppKeyPickerProps> = ({keyOf, onChange}) => {\n    useEffect(() => {\n        const listener = ({code}: KeyboardEvent) => onChange(code);\n        document.addEventListener('keydown', listener, {once: true});\n        return () => document.removeEventListener('keydown', listener);\n    });\n\n    return (\n        <div className=\"text-2xl font-bold text-center w-full uppercase\">\n            {KEY_BINDING_LABELS[keyOf]}\n        </div>\n    );\n};\n","import {ActionCreatorWithPayload} from '@reduxjs/toolkit';\nimport {FC, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {AppKeyBinding} from '../../atoms/app/AppKeyBinding';\nimport {useLogger} from '../../particles/hooks/useLogger';\nimport {\n    KEY_BINDING_LABELS,\n    KEY_BINDINGS,\n    KeyBindings\n} from '../../particles/key_bindings.types';\nimport {UiButton} from '../../particles/ui/UiButton';\nimport {UiDialog} from '../../particles/ui/UiDialog';\nimport {AppKeyPicker} from '../app/AppKeyPicker';\n\nexport interface OptionsKeyBindingsProps {\n    actionKeys?: ActionCreatorWithPayload<Partial<KeyBindings>>;\n\n    selectKeys?: () => KeyBindings;\n}\n\nexport const OptionsKeyBindings: FC<OptionsKeyBindingsProps> = ({\n    selectKeys = AppSelectors.keys,\n    actionKeys = AppActions.keys\n}) => {\n    const [pickKey, setPickKey] = useState<keyof KeyBindings | undefined>();\n    const keys = useSelector(selectKeys);\n    const dispatch = useAppDispatch();\n    const log = useLogger(OptionsKeyBindings.name);\n    return (\n        <>\n            {KEY_BINDINGS.map((keyOf, indx) => (\n                <AppKeyBinding\n                    key={indx}\n                    keyCode={keys[keyOf]}\n                    label={KEY_BINDING_LABELS[keyOf]}\n                    onClick={() => setPickKey(keyOf)}\n                />\n            ))}\n            <UiDialog\n                className=\"max-w-[22rem]\"\n                title=\"Press Key\"\n                open={Boolean(pickKey)}\n                onClose={() => setPickKey(undefined)}\n            >\n                <AppKeyPicker\n                    keyOf={pickKey!}\n                    onChange={(code) => {\n                        log({pickKey, code});\n                        dispatch(actionKeys({keyOf: pickKey!, code}));\n                        setPickKey(undefined);\n                    }}\n                />\n                <UiButton\n                    className=\"mt-5 ml-auto mr-auto px-6 py-2\"\n                    primary={true}\n                    onClick={() => setPickKey(undefined)}\n                >\n                    Cancel\n                </UiButton>\n            </UiDialog>\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppDarkMode} from '../../molecules/app/AppDarkMode';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton} from '../../particles/ui/UiButton';\nimport {OptionsAudio} from '../options/OptionsAudio';\nimport {OptionsGame} from '../options/OptionsGame';\nimport {OptionsKeyBindings} from '../options/OptionsKeyBindings';\n\nexport interface GameOptionsProps {\n    darkMode: boolean;\n}\n\nexport const GameOptions: FC<GameOptionsProps & ClassNameProps> = ({\n    darkMode,\n    className\n}) => {\n    const dispatch = useAppDispatch();\n    return (\n        <div className={classNames(className, 'flex flex-col')}>\n            <div className=\"grid grid-cols-2 gap-2\">\n                <OptionsKeyBindings />\n                <OptionsGame />\n                <OptionsAudio />\n                <UiButton\n                    className=\"mt-3 py-2\"\n                    onClick={() => dispatch(AppActions.resetScore())}\n                >\n                    Reset Scores\n                </UiButton>\n                <UiButton\n                    className=\"mt-3 py-2\"\n                    onClick={() => dispatch(AppActions.resetOptions())}\n                >\n                    Reset Options\n                </UiButton>\n            </div>\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {cloneElement, FC, ReactElement, useMemo} from 'react';\nimport {FaCheck, FaTimes} from 'react-icons/fa';\nimport {ClassNameProps} from '../particles.types';\n\nexport interface UiToggleProps {\n    iconOff?: ReactElement;\n\n    iconOn?: ReactElement;\n\n    onChange: (value: boolean) => void;\n\n    value: boolean;\n}\n\nexport const UiToggle: FC<UiToggleProps & ClassNameProps> = ({\n    value,\n    onChange,\n    iconOn,\n    iconOff,\n    className\n}) => {\n    const cloneOn = useMemo(() => {\n        const icon = iconOn || <FaCheck className=\"text-green-200\" />;\n        return cloneElement(icon, {\n            className: `text-[24px] mr-1 ${icon.props.className}`\n        });\n    }, [iconOn]);\n\n    const cloneOff = useMemo(() => {\n        const icon = iconOff || <FaTimes className=\"text-red-500\" />;\n        return cloneElement(icon, {\n            className: `text-[24px] ${icon.props.className}`\n        });\n    }, [iconOff]);\n\n    return (\n        <div\n            className={classNames(\n                className,\n                'flex relative p-1 text-[26px] h-[26px] w-[50px] bg-black rounded-full cursor-pointer items-center justify-between'\n            )}\n            onClick={() => onChange(!value)}\n        >\n            {cloneOn}\n            {cloneOff}\n            <div\n                className={classNames(\n                    'bg-white rounded-full absolute top-[2px] left-[2px] h-[22px] w-[22px] transition-transform transform translate-x-0',\n                    {'translate-x-[24px]': Boolean(value)}\n                )}\n            />\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {FaMoon, FaSun} from 'react-icons/fa';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {UiToggle} from '../../particles/ui/UiToggle';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {GiHelmet} from 'react-icons/gi';\n\nexport interface AppDarkModeProps {\n    selectDark?: () => boolean;\n}\n\nexport const AppDarkMode: FC<AppDarkModeProps & ClassNameProps> = ({\n    selectDark = AppSelectors.dark,\n    className\n}) => {\n    const dark = useSelector(selectDark);\n    const dispatch = useAppDispatch();\n    return (\n        <UiToggle\n            className={className}\n            onChange={(value) => dispatch(AppActions.dark(value))}\n            value={dark}\n            iconOn={<FaMoon className=\"text-blue-200\" />}\n            iconOff={<FaSun className=\"text-yellow-500\" />}\n        />\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppCopyright} from '../../atoms/app/AppCopyright';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {GameOptions} from '../game/GameOptions';\nimport {AppDarkMode} from '../../molecules/app/AppDarkMode';\nimport {UiButton} from '../../particles/ui/UiButton';\nimport {AppActions} from '../../../store/app/app-actions';\nexport interface OptionsDialogProps {\n    selectWelcoming?: () => boolean;\n}\n\nexport const OptionsDialog: FC<OptionsDialogProps & Partial<AppDialogControl>> =\n    ({\n        selectWelcoming = GameSelectors.welcoming,\n        selectOpen = AppSelectors.isOpen(AppDialogType.OPTIONS)\n        //selectStart = AppSelectors.startLevel\n    }) => {\n        const welcoming = useSelector(selectWelcoming);\n        //const startLevel = useSelector(selectStart);\n        return (\n            <AppDialog\n                className=\"max-w-[22rem]\"\n                title=\"Settings\"\n                large={true}\n                selectOpen={selectOpen}\n            >\n                <GameOptions darkMode={!welcoming} />\n                <AppDarkMode className=\"ml-auto mr-auto mt-5 mb-auto\" />\n            </AppDialog>\n        );\n    };\n","import {PayloadAction} from '@reduxjs/toolkit';\nimport classNames from 'classnames';\nimport {FC} from 'react';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton} from '../../particles/ui/UiButton';\n\nexport interface AppMenuItem {\n    action: PayloadAction<any>;\n\n    active?: boolean;\n\n    title: string;\n}\n\nexport interface AppMenuProps {\n    items: AppMenuItem[];\n}\n\nexport const AppMenu: FC<AppMenuProps & ClassNameProps> = ({\n    items,\n    className\n}) => {\n    const dispatch = useAppDispatch();\n    return (\n        <div className={classNames(className, 'flex flex-col')}>\n            {items.map(({action, active, title}, indx) => (\n                <UiButton\n                    className=\"py-2 px-4 mb-4\"\n                    primary={active}\n                    onClick={() => dispatch(action)}\n                    key={indx}\n                >\n                    {title}\n                </UiButton>\n            ))}\n        </div>\n    );\n};\n","import {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {environment} from '../../../environment/environment';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {AppLogo} from '../../atoms/app/AppLogo';\nimport {AppMenu, AppMenuItem} from '../../atoms/app/AppMenu';\nimport {AppDarkMode} from '../../molecules/app/AppDarkMode';\n\nexport interface ButtonProps {\n    selectWelcoming?: () => boolean;\n}\n\nexport const Button: FC<ButtonProps> = ({}) => {\n    const menu: Array<AppMenuItem> = useMemo(() => {\n        return [\n            {\n                title: 'D-Pad Controls',\n                action: AppActions.open(AppDialogType.OPTIONS)\n            },\n            {\n                title: 'Swipe Controls',\n                action: AppActions.open(AppDialogType.SWIPEOPTIONS)\n            }\n            // {title: 'Credits', action: AppActions.open(AppDialogType.CREDITS)}\n        ];\n    }, []);\n\n    return (\n        <div className=\"flex flex-col h-full\">\n            <AppMenu className=\"w-44 ml-auto mr-auto\" items={menu} />\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppCopyright} from '../../atoms/app/AppCopyright';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {CreditsDialog} from '../../organisms/dialogs/CreditsDialog';\nimport {AppDarkMode} from '../../molecules/app/AppDarkMode';\nimport {Button} from '../../organisms/Set/SetButton';\n\nexport interface SettingsDialogProps {\n    selectWelcoming?: () => boolean;\n}\n\nexport const SettingsDialog: FC<\n    SettingsDialogProps & Partial<AppDialogControl>\n> = ({\n    selectWelcoming = GameSelectors.welcoming,\n    selectOpen = AppSelectors.isOpen(AppDialogType.SETTINGS)\n}) => {\n    const welcoming = useSelector(selectWelcoming);\n    return (\n        <AppDialog\n            className=\"max-w-[22rem]\"\n            title=\"Settings\"\n            large={true}\n            selectOpen={selectOpen}\n        >\n            <Button />\n        </AppDialog>\n    );\n};\n","import {FC, useMemo} from 'react';\nimport {FaCog} from 'react-icons/fa';\nimport {useSelector} from 'react-redux';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {AppDialogType} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {AppBar, AppBarTool} from '../../atoms/app/AppBar';\nimport {AppMenu, AppMenuItem} from '../../atoms/app/AppMenu';\nimport {AppDialog, AppDialogControl} from '../../molecules/app/AppDialog';\nimport {\n    MUSIC_ICON,\n    MUSIC_TOOLTIP,\n    SOUND_ICON,\n    SOUND_TOOLTIP\n} from '../../particles/audio.types';\n\nexport interface PauseDialogProps {\n    selectMusic?: () => boolean;\n\n    selectSound?: () => boolean;\n\n    selectStart?: () => number;\n}\n\nexport const PauseDialog: FC<PauseDialogProps & Partial<AppDialogControl>> = ({\n    selectMusic = AppSelectors.music,\n    selectSound = AppSelectors.sound,\n    selectStart = AppSelectors.startLevel,\n    closeAction = GameActions.resume(),\n    selectOpen = GameSelectors.paused\n}) => {\n    const music = useSelector(selectMusic);\n    const sound = useSelector(selectSound);\n    const startLevel = useSelector(selectStart);\n\n    const tools = useMemo((): AppBarTool[] => {\n        return [\n            {\n                icon: SOUND_ICON[sound.toString()],\n                toolTip: SOUND_TOOLTIP[sound.toString()],\n                active: sound,\n                action: AppActions.sound()\n            },\n            {\n                icon: MUSIC_ICON[music.toString()],\n                toolTip: MUSIC_TOOLTIP[music.toString()],\n                active: music,\n                action: AppActions.music()\n            }\n        ];\n    }, [music, sound]);\n\n    const menu: Array<AppMenuItem> = useMemo(() => {\n        return [\n            {title: 'Continue', action: GameActions.resume(), active: true},\n            {title: 'Restart', action: GameActions.start(startLevel)},\n            {title: 'Quit Game', action: GameActions.quit()}\n        ];\n    }, [startLevel]);\n\n    return (\n        <AppDialog\n            className=\"max-w-[12rem]\"\n            title=\"Paused\"\n            selectOpen={selectOpen}\n            closeAction={closeAction}\n        >\n            <AppMenu className=\"mb-5\" items={menu} />\n            <AppBar tools={tools} />\n        </AppDialog>\n    );\n};\n","import {useEffect} from 'react';\nimport ReactGA from 'react-ga';\n\nexport const usePageView = (url: string) => {\n    useEffect(() => {\n        ReactGA.pageview(url);\n    }, [url]);\n};\n","import {useEffect, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {environment} from '../../../environment/environment';\nimport {GameStatus} from '../../../store/game/game-model';\nimport {GameSelectors} from '../../../store/game/game-selectors';\n\nconst STATUS_TITLE = {\n    [GameStatus.WELCOME]: 'Welcome',\n    [GameStatus.STARTING]: 'Starting',\n    [GameStatus.RUNNING]: 'Playing',\n    [GameStatus.PAUSED]: 'Paused',\n    [GameStatus.FINISHING]: 'Game Over',\n    [GameStatus.FINISHED]: 'Game Over'\n};\n\nexport const useTitle = () => {\n    const status = useSelector(GameSelectors.status);\n    const title = useMemo(\n        () => `${STATUS_TITLE[status]} | ${environment.brandName}`,\n        [status]\n    );\n    useEffect(() => {\n        document.title = title;\n    }, [title]);\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameValueProps {\n    label: string;\n\n    reverse?: boolean;\n}\n\nexport const GameValue: FC<GameValueProps & ClassNameProps> = ({\n    label,\n    reverse = false,\n    className,\n    children\n}) => {\n    const {transparent} = useUiTheme();\n    return (\n        <div\n            className={classNames(className, 'flex items-center w-full', {\n                'flex-col': !reverse,\n                'flex-col-reverse': reverse\n            })}\n        >\n            <div className=\"flex text-light mb-1\">{label}</div>\n            <div\n                className={classNames('flex w-full flex-col rounded-lg', {\n                    'border border-gray-200 dark:border-gray-600': transparent,\n                    'dark:nm-inset-gray-800 nm-inset-gray-100': !transparent\n                })}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {CSSProperties, FC, useMemo} from 'react';\nimport {TetrominosType} from '../../../engine/game-tetrominos';\nimport './GameBlock.css';\n\nexport interface GameBlockProps {\n    ghost?: number;\n\n    glow?: boolean;\n\n    grid?: boolean;\n\n    speed?: number;\n\n    type?: TetrominosType;\n}\n\nexport const GAME_BLOCK_COLOR = {\n    [TetrominosType.I]: 'color-i',\n    [TetrominosType.O]: 'color-o',\n    [TetrominosType.T]: 'color-t',\n    [TetrominosType.S]: 'color-s',\n    [TetrominosType.Z]: 'color-z',\n    [TetrominosType.J]: 'color-j',\n    [TetrominosType.L]: 'color-l'\n};\n\nexport const GameBlock: FC<GameBlockProps> = ({\n    ghost,\n    glow,\n    grid,\n    speed,\n    type\n}) => {\n    const styleAnimation = useMemo(() => {\n        const style: CSSProperties = {};\n        if (type && glow && speed) {\n            style['animationDuration'] = `${speed}ms`;\n        }\n        if (ghost) {\n            style['opacity'] = `${ghost}`;\n        }\n        return style;\n    }, [type, glow, speed, ghost]);\n\n    return (\n        <div\n            className={classNames('game-block swipeController bg-block', {\n                'game-block-border': grid\n            })}\n            data-testid=\"game-block\"\n        >\n            <div\n                className={classNames(\n                    'block-color relative w-full h-full border-opacity-100 bg-block',\n                    !glow && type && GAME_BLOCK_COLOR[type],\n                    {\n                        'color-glow': type && glow,\n                        ghost: type && ghost\n                        // fill: type && !ghost\n                    }\n                )}\n                style={styleAnimation}\n            />\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {GamePiece} from '../../../engine/game-player';\nimport {TetrominosType} from '../../../engine/game-tetrominos';\nimport {GameBlock} from '../../atoms/game/GameBlock';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface DesignDisplayProps {\n    center?: [number, number];\n\n    count?: number;\n\n    grid?: boolean;\n\n    type?: TetrominosType;\n\n    values?: GamePiece;\n}\n\nexport const DesignDisplay: FC<DesignDisplayProps & ClassNameProps> = ({\n    center = [2, 1],\n    grid = true,\n    count = 4,\n    type = TetrominosType.Z,\n    values,\n    className\n}) => {\n    const blocks = useMemo(() => {\n        const [center_x, center_y] = center;\n        const grid = Array(count * count).fill(undefined);\n        values?.forEach(\n            ([x, y]) =>\n                (grid[y * count + x + center_x + center_y * count] = type)\n        );\n        return grid;\n    }, [count, center, type, values]);\n\n    return (\n        <div\n            className={classNames(className, 'grid w-full min-w-full', {\n                'game-grid': grid\n            })}\n            style={{gridTemplateColumns: `repeat(${count}, minmax(0, 1fr))`}}\n        >\n            {blocks.map((blockType, indx) => (\n                <GameBlock key={indx} type={blockType} grid={grid} />\n            ))}\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GAME_PIECES} from '../../../engine/game-player';\nimport {AppState} from '../../../store/app-store';\nimport {NextTetrominos} from '../../../store/game/game-model';\nimport {GameValue} from '../../atoms/game/GameValue';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {DesignDisplay} from '../design/DesignDisplay';\n\nexport interface GamePiecesProps {\n    label: string;\n\n    reverse?: boolean;\n\n    selectPieces: (state: AppState) => NextTetrominos;\n}\n\nexport const GamePieces: FC<GamePiecesProps & ClassNameProps> = ({\n    label,\n    reverse = false,\n    selectPieces,\n    className\n}) => {\n    const pieces: NextTetrominos = useSelector(selectPieces);\n    return (\n        <GameValue label={label} reverse={reverse}>\n            <div\n                className={classNames(\n                    className,\n                    'flex flex-col relative w-full bg-black'\n                )}\n            >\n                {pieces.map((type, indx) => (\n                    <DesignDisplay\n                        key={indx}\n                        values={type ? GAME_PIECES[type][0] : undefined}\n                        type={type}\n                        grid={false}\n                    />\n                ))}\n            </div>\n        </GameValue>\n    );\n};\n","import {FC, useEffect} from 'react';\n\nexport interface KeyPressedProps {\n    keyCode: string;\n\n    onPress?: () => void;\n\n    onRelease?: () => void;\n}\n\nexport const KeyPressed: FC<KeyPressedProps> = ({\n    keyCode,\n    onPress,\n    onRelease\n}) => {\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (!e.repeat && e.code === keyCode) {\n                if (e.type === 'keydown') {\n                    onPress && onPress();\n                }\n                if (e.type === 'keyup') {\n                    onRelease && onRelease();\n                }\n            }\n        };\n\n        document.addEventListener('keydown', listener);\n        document.addEventListener('keyup', listener);\n        return () => {\n            document.removeEventListener('keydown', listener);\n            document.removeEventListener('keyup', listener);\n        };\n    }, [keyCode, onPress, onRelease]);\n    return null;\n};\n","import classNames from 'classnames';\nimport {FC, useState} from 'react';\nimport {CgArrowsExpandLeft} from 'react-icons/cg';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nexport interface GameHoldProps {\n    disabled: boolean;\n\n    keyCode: string;\n\n    onHold: () => void;\n}\n\nexport const GameHold: FC<GameHoldProps & ClassNameProps> = ({\n    disabled,\n    keyCode,\n    onHold,\n    className\n}) => {\n    const [active, setActive] = useState(false);\n    const {large} = useUiTheme();\n\n    return (\n        <>\n            <UiButton\n                data-testid=\"game-hold\"\n                className={classNames(className, 'flex text-sm', {\n                    'p-2': !large,\n                    'p-3': large\n                })}\n                preventFocus={true}\n                disabled={disabled}\n                active={active && !disabled}\n                shape={UiButtonShape.ROUND}\n                onClick={() => onHold()}\n            >\n                <CgArrowsExpandLeft />\n            </UiButton>\n            <KeyPressed\n                keyCode={keyCode}\n                onPress={() => {\n                    !disabled && onHold();\n                    setActive(true);\n                }}\n                onRelease={() => {\n                    setActive(false);\n                }}\n            />\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useMemo, useState} from 'react';\nimport {BiRotateLeft, BiRotateRight} from 'react-icons/bi';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nexport interface GameRotateProps {\n    disabled?: boolean;\n\n    keyCodeLeft: string;\n\n    keyCodeRight: string;\n\n    onRotateLeft: () => void;\n\n    onRotateRight: () => void;\n}\n\nexport const GameRotate: FC<GameRotateProps & ClassNameProps> = ({\n    disabled,\n    keyCodeLeft,\n    keyCodeRight,\n    onRotateLeft,\n    onRotateRight,\n    className\n}) => {\n    const [left, setLeft] = useState(false);\n    const [right, setRight] = useState(false);\n    const {large} = useUiTheme();\n\n    const btnClass = useMemo(\n        () =>\n            classNames(className, 'flex text-lg items-center justify-center', {\n                'w-14 h-14': !large,\n                'w-16 h-16': large\n            }),\n        [className, large]\n    );\n\n    return (\n        <div className=\"flex gap-4 my-auto\">\n            <UiButton\n                data-testid=\"game-rotate-left\"\n                className={btnClass}\n                preventFocus={true}\n                disabled={disabled}\n                active={left}\n                shape={UiButtonShape.LEFT}\n                onPress={onRotateLeft}\n            >\n                <BiRotateLeft />\n            </UiButton>\n            <UiButton\n                data-testid=\"game-rotate-right\"\n                className={btnClass}\n                preventFocus={true}\n                disabled={disabled}\n                active={right}\n                shape={UiButtonShape.RIGHT}\n                onPress={onRotateRight}\n            >\n                <BiRotateRight />\n            </UiButton>\n            {!disabled && (\n                <KeyPressed\n                    keyCode={keyCodeLeft}\n                    onPress={() => {\n                        onRotateLeft();\n                        setLeft(true);\n                    }}\n                    onRelease={() => {\n                        setLeft(false);\n                    }}\n                />\n            )}\n            {!disabled && (\n                <KeyPressed\n                    keyCode={keyCodeRight}\n                    onPress={() => {\n                        onRotateRight();\n                        setRight(true);\n                    }}\n                    onRelease={() => {\n                        setRight(false);\n                    }}\n                />\n            )}\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {FaBars} from 'react-icons/fa';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nexport const GameSettings: FC<ClassNameProps> = ({className}) => {\n    const paused = useSelector(GameSelectors.paused);\n    const dispatch = useAppDispatch();\n    const {large} = useUiTheme();\n\n    return (\n        <>\n            <UiButton\n                data-testid=\"game-settings\"\n                className={classNames(className, 'flex text-sm', {\n                    'p-2': !large,\n                    'p-3': large\n                })}\n                disabled={paused}\n                preventFocus={true}\n                primary={true}\n                shape={UiButtonShape.ROUND}\n                onClick={() => dispatch(GameActions.pause())}\n            >\n                <FaBars />\n            </UiButton>\n            {!paused && (\n                <KeyPressed\n                    keyCode={'Escape'}\n                    onPress={() => dispatch(GameActions.pause())}\n                />\n            )}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, ReactElement, useState} from 'react';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nexport interface GameDropProps {\n    disabled?: boolean;\n\n    icon: ReactElement;\n\n    keyCode: string;\n\n    onDrop: (pressed: boolean) => void;\n\n    shape: UiButtonShape;\n}\n\nexport const GameDrop: FC<GameDropProps & ClassNameProps> = ({\n    disabled,\n    icon,\n    keyCode,\n    onDrop,\n    shape,\n    className\n}) => {\n    const [active, setActive] = useState(false);\n    const {large} = useUiTheme();\n\n    return (\n        <>\n            <UiButton\n                className={classNames(\n                    className,\n                    'items-center justify-center',\n                    {'p-4': !large, 'p-5': large}\n                )}\n                disabled={disabled}\n                preventFocus={true}\n                shape={shape}\n                active={active}\n                data-testid=\"game-soft-drop\"\n                onPress={() => onDrop(true)}\n                onRelease={() => onDrop(false)}\n            >\n                {icon}\n            </UiButton>\n            {!disabled && (\n                <KeyPressed\n                    keyCode={keyCode}\n                    onPress={() => {\n                        onDrop(true);\n                        setActive(true);\n                    }}\n                    onRelease={() => {\n                        onDrop(false);\n                        setActive(false);\n                    }}\n                />\n            )}\n        </>\n    );\n};\n","import {FC, useEffect} from 'react';\n\nexport interface RepeaterProps {\n    disabled?: boolean;\n\n    emitFirst?: boolean;\n\n    onRepeat: () => void;\n\n    speed: number;\n}\n\nexport const Repeater: FC<RepeaterProps> = ({\n    emitFirst,\n    disabled,\n    onRepeat,\n    speed\n}) => {\n    useEffect(() => {\n        if (!disabled) {\n            emitFirst && onRepeat();\n            if (speed > 0) {\n                const id = setInterval(() => onRepeat(), speed);\n                return () => clearInterval(id);\n            }\n        }\n    }, [emitFirst, disabled, onRepeat, speed]);\n    return null;\n};\n","import classNames from 'classnames';\nimport {FC, ReactElement, useCallback, useEffect, useState} from 'react';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {KeyPressed} from '../../particles/nulls/KeyPressed';\nimport {Repeater} from '../../particles/nulls/Repeater';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButton, UiButtonShape} from '../../particles/ui/UiButton';\n\nconst SKIP_SECOND_REPEAT = 1;\n\nexport interface GameMoveProps {\n    disabled?: boolean;\n\n    icon: ReactElement;\n\n    keyCode: string;\n\n    onMove: () => void;\n\n    shape: UiButtonShape;\n\n    speed?: number;\n}\n\nexport const GameMove: FC<GameMoveProps & ClassNameProps> = ({\n    disabled,\n    icon,\n    keyCode,\n    onMove,\n    speed = 500,\n    shape,\n    className\n}) => {\n    const [count, setCount] = useState(0);\n    const [enable, setEnable] = useState(false);\n    const {large} = useUiTheme();\n\n    useEffect(() => {\n        if (enable && count !== SKIP_SECOND_REPEAT) {\n            onMove();\n        }\n    }, [enable, count, onMove]);\n\n    const startRepeat = useCallback(() => {\n        setEnable(true);\n        setCount(0);\n    }, []);\n    const stopRepeat = useCallback(() => setEnable(false), []);\n\n    return (\n        <>\n            <UiButton\n                data-testid=\"game-move\"\n                className={classNames(\n                    'items-center justify-center',\n                    className,\n                    {'p-4': !large, 'p-5': large}\n                )}\n                preventFocus={true}\n                disabled={disabled}\n                active={enable}\n                shape={shape}\n                onPress={() => startRepeat()}\n                onRelease={() => stopRepeat()}\n            >\n                {icon}\n            </UiButton>\n            {!disabled && (\n                <KeyPressed\n                    keyCode={keyCode}\n                    onPress={startRepeat}\n                    onRelease={stopRepeat}\n                />\n            )}\n            {!disabled && (\n                <Repeater\n                    onRepeat={() => setCount(count + 1)}\n                    disabled={!enable}\n                    speed={speed}\n                />\n            )}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {\n    FaChevronDown,\n    FaChevronLeft,\n    FaChevronRight,\n    FaChevronUp\n} from 'react-icons/fa';\nimport {GameDrop} from '../../atoms/game/GameDrop';\nimport {GameMove} from '../../atoms/game/GameMove';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {UiButtonShape} from '../../particles/ui/UiButton';\n\nexport interface GameArrowsProps {\n    disabled?: boolean;\n\n    hardDrop: string;\n\n    left: string;\n\n    onHardDrop: () => void;\n\n    onLeft: () => void;\n\n    onRight: () => void;\n\n    onSoftDrop: (fast: boolean) => void;\n\n    right: string;\n\n    softDrop: string;\n\n    speed?: number;\n}\n\nexport const GameArrows: FC<GameArrowsProps & ClassNameProps> = ({\n    disabled,\n    hardDrop,\n    left,\n    right,\n    softDrop,\n    onHardDrop,\n    onLeft,\n    onRight,\n    onSoftDrop,\n    speed = 500,\n    className\n}) => {\n    return (\n        <div className={classNames(className, 'grid grid-cols-3 gap-1')}>\n            <GameDrop\n                className=\"col-start-2 bg-yellow-600\"\n                disabled={disabled}\n                icon={<FaChevronUp />}\n                keyCode={hardDrop}\n                onDrop={(enable) => {\n                    enable && onHardDrop();\n                }}\n                shape={UiButtonShape.UP}\n            />\n            <GameMove\n                className=\"col-start-1\"\n                disabled={disabled}\n                icon={<FaChevronLeft />}\n                keyCode={left}\n                onMove={onLeft}\n                speed={speed}\n                shape={UiButtonShape.LEFT}\n            />\n            <GameMove\n                className=\"col-start-3\"\n                disabled={disabled}\n                icon={<FaChevronRight />}\n                keyCode={right}\n                onMove={onRight}\n                speed={speed}\n                shape={UiButtonShape.RIGHT}\n            />\n            <GameDrop\n                className=\"col-start-2\"\n                disabled={disabled}\n                icon={<FaChevronDown />}\n                keyCode={softDrop}\n                onDrop={onSoftDrop}\n                shape={UiButtonShape.DOWN}\n            />\n        </div>\n    );\n};\n","import React, {FC, useState} from 'react';\nimport classNames from 'classnames';\nimport {useSelector} from 'react-redux';\nimport {GamePlayerDirection} from '../../../engine/game-transform';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameHold} from '../../atoms/game/GameHold';\nimport {GameRotate} from '../../atoms/game/GameRotate';\nimport {GameSettings} from '../../atoms/game/GameSettings';\nimport {GameArrows} from '../../molecules/game/GameArrows';\nimport {\n    UiThemeProvider,\n    useUiTheme\n} from '../../particles/contexts/UiThemeContext';\nimport {KeyBindings} from '../../particles/key_bindings.types';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {OptionsGame} from '../options/OptionsGame';\n\nexport interface GameControlsProps {\n    selectEnabled?: () => boolean;\n    selectHoldEnabled?: () => boolean;\n    selectKeys?: () => KeyBindings;\n    selectRepeatSpeed?: () => number;\n    transparent?: boolean;\n}\n\nexport const GameControls: FC<GameControlsProps & ClassNameProps> = ({\n    selectKeys = AppSelectors.keys,\n    selectRepeatSpeed = GameSelectors.repeatSpeed,\n    selectEnabled = GameSelectors.running,\n    selectHoldEnabled = GameSelectors.holdEnabled,\n    transparent,\n    className\n}) => {\n    const {left, right, rotate_left, rotate_right, soft_drop, hard_drop, hold} =\n        useSelector(selectKeys);\n    const repeatSpeed = useSelector(selectRepeatSpeed);\n    const holdEnabled = useSelector(selectHoldEnabled);\n    const enabled = useSelector(selectEnabled);\n    const dispatch = useAppDispatch();\n    const {large} = useUiTheme();\n    const Swipe = useSelector(AppSelectors.Swipe);\n    const hand = useSelector(AppSelectors.hand);\n\n    return (\n        <div\n            className={classNames(className, 'flex relative flex-row-reverse ')}\n        >\n            <div\n                className={classNames(\n                    className,\n                    'flex relative ',\n                    hand === 'right' && 'flex-row-reverse'\n                )}\n            >\n                <UiThemeProvider\n                    transparent={Boolean(transparent)}\n                    large={large}\n                >\n                    <div className=\"flex relative ml-auto ml-5 mr-5\">\n                        <GameHold\n                            className=\"absolute top-0 left-0\"\n                            keyCode={hold}\n                            disabled={!enabled || !holdEnabled}\n                            onHold={() => {\n                                dispatch(GameActions.hold());\n                                dispatch(GameActions.tick());\n                            }}\n                        />\n                        <GameRotate\n                            disabled={!enabled}\n                            keyCodeLeft={rotate_left}\n                            keyCodeRight={rotate_right}\n                            onRotateLeft={() =>\n                                dispatch(\n                                    GameActions.rotate(GamePlayerDirection.LEFT)\n                                )\n                            }\n                            onRotateRight={() =>\n                                dispatch(\n                                    GameActions.rotate(\n                                        GamePlayerDirection.RIGHT\n                                    )\n                                )\n                            }\n                        />\n                    </div>\n                    <GameArrows\n                        disabled={!enabled}\n                        left={left}\n                        right={right}\n                        softDrop={soft_drop}\n                        hardDrop={hard_drop}\n                        onLeft={() =>\n                            dispatch(GameActions.move(GamePlayerDirection.LEFT))\n                        }\n                        onRight={() =>\n                            dispatch(\n                                GameActions.move(GamePlayerDirection.RIGHT)\n                            )\n                        }\n                        onSoftDrop={(fast) =>\n                            dispatch(GameActions.softDrop(fast))\n                        }\n                        onHardDrop={() => dispatch(GameActions.hardDrop())}\n                        speed={repeatSpeed}\n                    />\n                    <GameSettings className=\"absolute top-0 right-0\" />\n                </UiThemeProvider>\n            </div>\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {useInterval} from '../../particles/hooks/useInterval';\n\nexport interface GameTickerProps {\n    onTick: () => void;\n\n    speed: number;\n}\n\nexport const GameTicker: FC<GameTickerProps> = ({speed, onTick}) => {\n    useInterval(() => onTick(), speed, [speed, onTick]);\n    return null;\n};\n","import {DependencyList, useEffect, useMemo} from 'react';\n\nexport const useInterval = (\n    callback: () => void,\n    ms: number,\n    deps: DependencyList\n) => {\n    const all_deps = useMemo(\n        () => [callback, ms, ...deps],\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [callback, ms, deps]\n    );\n    useEffect(() => {\n        const id = setInterval(() => callback(), ms);\n        return () => clearInterval(id);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, all_deps);\n};\n","import classNames from 'classnames';\nimport {FC, useEffect, useState} from 'react';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameTimerProps {\n    count?: number;\n\n    onStart: () => void;\n}\n\nexport const GameTimer: FC<GameTimerProps & ClassNameProps> = ({\n    count,\n    onStart,\n    className\n}) => {\n    const [counter, setCounter] = useState(() => count as number);\n\n    useEffect(() => {\n        if (counter > 0) {\n            const id = setInterval(() => setCounter(counter - 1), 1000);\n            return () => clearInterval(id);\n        } else if (counter === 0) {\n            onStart();\n        }\n    }, [counter, onStart]);\n\n    return (\n        <div\n            data-testid=\"game-timer\"\n            className={classNames(\n                className,\n                'flex font-mono items-center justify-center text-9xl'\n            )}\n        >\n            {counter > 0 ? counter : ''}\n        </div>\n    );\n};\n\nGameTimer.defaultProps = {\n    count: 3\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameBlock} from './GameBlock';\n\nexport interface GameBlockIndexProps {\n    indx: number;\n}\n\nexport const GameBlockIndex: FC<GameBlockIndexProps> = ({indx}) => {\n    const cell = useSelector(GameSelectors.screenCell(indx));\n    const speed = useSelector(GameSelectors.speed);\n    return cell ? (\n        <GameBlock\n            type={cell.type}\n            glow={cell.glow}\n            ghost={cell.ghost}\n            speed={speed}\n            grid={true}\n        />\n    ) : null;\n};\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameBlockIndex} from '../../atoms/game/GameBlockIndex';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport './GameGrid.css';\n\nexport const GameGrid: FC<ClassNameProps> = ({className}) => {\n    const [width, height] = useSelector(GameSelectors.size);\n    const blocks = useMemo(\n        () => Array(width * height).fill(null),\n        [width, height]\n    );\n\n    return (\n        <div\n            className={classNames(\n                className,\n                'game-grid ml-auto mr-auto w-full min-w-full min-h-full border-gray-700 bg-grid m'\n            )}\n            style={{gridTemplateColumns: `repeat(${width}, minmax(0, 1fr))`}}\n        >\n            {blocks.map((_, indx) => (\n                <GameBlockIndex key={indx} indx={indx} />\n            ))}\n        </div>\n    );\n};\n","import {FC, useEffect, useRef} from 'react';\n\nexport interface GameAudioProps {\n    autoPlay?: boolean;\n\n    loop?: boolean;\n\n    onDone?: () => void;\n\n    onLoaded?: () => void;\n\n    src: string;\n\n    volume?: number;\n}\n\nexport const GameAudio: FC<GameAudioProps> = ({\n    autoPlay = true,\n    loop,\n    onDone,\n    onLoaded,\n    src,\n    volume\n}) => {\n    const ref = useRef<HTMLAudioElement>(null);\n\n    useEffect(() => {\n        if (volume) {\n            ref.current!.volume = volume;\n        }\n    }, [ref, volume]);\n\n    return (\n        <audio\n            src={src}\n            ref={ref}\n            autoPlay={autoPlay}\n            controls={false}\n            loop={Boolean(loop)}\n            onEnded={() => onDone && onDone()}\n            onCanPlayThrough={() => onLoaded && onLoaded()}\n        />\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameAudio} from '../../atoms/game/GameAudio';\nimport {AUDIO_FILES} from '../../particles/audio.types';\n\nexport const GameMusic: FC = () => {\n    const music = useSelector(AppSelectors.music);\n    const musicVolume = useSelector(AppSelectors.musicVolume);\n    const musicType = useSelector(AppSelectors.musicType);\n    return (\n        <>\n            {music && (\n                <GameAudio\n                    src={AUDIO_FILES[musicType]}\n                    volume={musicVolume / 100}\n                    loop={true}\n                />\n            )}\n        </>\n    );\n};\n","import {FC, useCallback, useMemo} from 'react';\nimport {GameAudio} from './GameAudio';\n\nexport interface GameAudioLoaderProps {\n    onLoaded: () => void;\n\n    sources: Array<string>;\n}\n\nexport const GameAudioLoader: FC<GameAudioLoaderProps> = ({\n    sources,\n    onLoaded\n}) => {\n    const sourceMap = useMemo(() => {\n        const pairs: Array<[string, boolean]> = sources.map((src) => [\n            src,\n            false\n        ]);\n        return new Map<string, boolean>(pairs);\n    }, [sources]);\n\n    const setLoaded = useCallback(\n        (key: string) => {\n            sourceMap.set(key, true);\n            const values = Array.from(sourceMap.values());\n            if (values.every((loaded) => loaded)) {\n                onLoaded();\n            }\n        },\n        [sourceMap, onLoaded]\n    );\n\n    return (\n        <>\n            {Array.from(sourceMap.keys()).map((src) => (\n                <GameAudio\n                    key={src}\n                    src={src}\n                    autoPlay={false}\n                    onLoaded={() => setLoaded(src)}\n                />\n            ))}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameAudioLoader} from '../../atoms/game/GameAudioLoader';\nimport {AUDIO_FILES, PRELOAD_AUDIO} from '../../particles/audio.types';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GamePreloaderProps {\n    onLoaded: () => void;\n}\n\nexport const GamePreloader: FC<GamePreloaderProps & ClassNameProps> = ({\n    onLoaded,\n    className\n}) => {\n    const musicType = useSelector(AppSelectors.musicType);\n    const preload = useMemo(\n        () => [...PRELOAD_AUDIO, AUDIO_FILES[musicType]],\n        [musicType]\n    );\n    return (\n        <div\n            data-testid=\"game-loader\"\n            className={classNames(\n                className,\n                'flex font-mono items-center justify-center text-2xl'\n            )}\n        >\n            Loading\n            <GameAudioLoader sources={preload} onLoaded={onLoaded} />\n        </div>\n    );\n};\n","import {FC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppSelectors} from '../../../store/app/app-selectors';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameAudio} from '../../atoms/game/GameAudio';\n\nexport const GameSoundTracks: FC = () => {\n    const sound = useSelector(AppSelectors.sound);\n    const soundVolume = useSelector(AppSelectors.soundVolume);\n    const soundTracks = useSelector(GameSelectors.soundTracks);\n    const dispatch = useAppDispatch();\n\n    return (\n        <>\n            {sound &&\n                soundTracks.map(({id, src}) => (\n                    <GameAudio\n                        key={id}\n                        src={src}\n                        volume={soundVolume / 100}\n                        onDone={() => dispatch(GameActions.soundTrack(id))}\n                    />\n                ))}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport {FC} from 'react';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameToastProps {\n    message: string;\n}\n\nexport const GameToast: FC<GameToastProps & ClassNameProps> = ({\n    message,\n    className\n}) => {\n    return (\n        <div\n            data-testid=\"game-toast\"\n            className={classNames(\n                className,\n                'flex font-mono items-center justify-center text-4xl'\n            )}\n        >\n            {message}\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport {FC, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {GameActions} from '../../../store/game/game-actions';\nimport {GamePlayerDirection} from '../../../engine/game-transform';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameTicker} from '../../atoms/game/GameTicker';\nimport {GameTimer} from '../../atoms/game/GameTimer';\nimport {GameGrid} from '../../molecules/game/GameGrid';\nimport {GameMusic} from '../../molecules/game/GameMusic';\nimport {GamePreloader} from '../../molecules/game/GamePreloader';\nimport {GameSoundTracks} from '../../molecules/game/GameSoundTracks';\nimport {GameToast} from '../../molecules/game/GameToast';\nimport {useUiTheme} from '../../particles/contexts/UiThemeContext';\nimport {useDocVisible} from '../../particles/hooks/useDocVisible';\nimport {ClassNameProps} from '../../particles/particles.types';\nimport {AppSelectors} from '../../../store/app/app-selectors';\n\nexport const GameEngine: FC<ClassNameProps> = ({className}) => {\n    // const [swipeEnabled, setSwipeEnabled] = useState(false);\n    const [loaded, setLoaded] = useState(false);\n    const [showToast, setShowToast] = useState(false);\n    const dispatch = useAppDispatch();\n    const visible = useDocVisible();\n\n    const starting = useSelector(GameSelectors.starting);\n    const running = useSelector(GameSelectors.running);\n    const finishing = useSelector(GameSelectors.finishing);\n    const restartTicker = useSelector(GameSelectors.restartTicker);\n    const toast = useSelector(GameSelectors.toastMessage);\n    const speed = useSelector(GameSelectors.speed);\n    const Swipe = useSelector(AppSelectors.Swipe);\n    const gridColsMobiles = Array.from(\n        document.querySelectorAll('.grid-cols-mobile')\n    );\n    useEffect(() => {\n        // if (Swipe === undefined) return;\n        // if (!document || !swipeEnabled) return;\n        if (Swipe === 'on') {\n            //console.log('Hello');\n            const swipeArea = document.getElementsByClassName('swipe');\n            // console.log(swipeArea);\n            let touchStartX: number, touchStartY: number;\n\n            const handleTouchStart = (e: TouchEvent) => {\n                e.preventDefault();\n                touchStartX = e.touches[0].pageX;\n                touchStartY = e.touches[0].pageY;\n                console.log('Touches', e.touches.length);\n                console.log('Target', e.targetTouches.length);\n                console.log('Changed', e.changedTouches.length);\n            };\n\n            document.addEventListener('touchstart', handleTouchStart);\n\n            // document.addEventListener('touchstart', (e) => {\n            //     [...e.changedTouches].forEach((touch) => {\n            //         // console.log(`${touch.pageY}px`);\n            //         // console.log(`${touch.pageX}px`);\n            //         // console.log('Start');\n            //     });\n            // });\n\n            document.addEventListener('touchmove', (e) => {\n                [...e.changedTouches].forEach((touch) => {\n                    // console.log('Start');\n                });\n            });\n            const handleTouchEnd = (e: TouchEvent) => {\n                [...e.changedTouches].forEach((touch) => {\n                    const delay = 500;\n                    const touchEndX = touch.pageX;\n                    const touchEndY = touch.pageY;\n                    const deltaX = touchEndX - touchStartX;\n                    const deltaY = touchEndY - touchStartY;\n                    // Determine the direction based on deltaX and deltaY\n                    let direction;\n                    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n                        direction = deltaX > 0 ? 'right' : 'left';\n                    } else {\n                        direction = deltaY > 0 ? 'down' : 'up';\n                    }\n                    console.log(`Swipe direction: ${direction}`);\n                    if (direction === 'left') {\n                        dispatch(GameActions.move(GamePlayerDirection.LEFT));\n                    }\n                    if (direction === 'right') {\n                        dispatch(GameActions.move(GamePlayerDirection.RIGHT));\n                    }\n                    if (direction === 'up') {\n                        dispatch(GameActions.rotate(GamePlayerDirection.RIGHT));\n                    }\n                    if (direction === 'down') {\n                        // dispatch(GameActions.softDrop(true));\n                        dispatch(GameActions.hardDrop());\n                        // dispatch(GameActions.rotate(GamePlayerDirection.LEFT));\n                    }\n                    // dispatch(GameActions.softDrop(false));\n                });\n            };\n            document.addEventListener('touchend', handleTouchEnd);\n            return () => {\n                document.removeEventListener('touchend', handleTouchEnd);\n                document.removeEventListener('touchstart', handleTouchStart);\n            };\n        }\n    }, [dispatch, Swipe]);\n\n    useEffect(() => {\n        if (toast) {\n            setShowToast(true);\n            const id = setTimeout(() => {\n                setShowToast(false);\n            }, 1000);\n            return () => {\n                setShowToast(false);\n                clearTimeout(id);\n            };\n        }\n    }, [toast]);\n\n    useEffect(() => {\n        if (!visible) {\n            dispatch(GameActions.pause());\n        }\n    }, [visible, dispatch]);\n\n    const {transparent} = useUiTheme();\n\n    return (\n        <div\n            className={classNames(\n                className,\n                document,\n                Swipe === 'on' && !document\n            )}\n        >\n            <div\n                className={classNames(\n                    className,\n                    'flex relative overflow-hidden rounded-lg desktop:p-4 w-full bg-bl',\n                    {\n                        'border border-gray-200 dark:border-gray-600':\n                            transparent,\n                        'dark:nm-inset-gray-800 nm-inset-gray-100': !transparent\n                    }\n                )}\n                // onTouchStart={() => {\n                //     alert('Touch Start');\n                // }}\n                // onTouchMove={() => {\n                //     alert('touch move');\n                // }}\n                // onTouchMoveCapture={() => {\n                //     if (true) {\n                //         alert('Swipped left');\n                //     }\n                //     if (false) {\n                //         alert('Swiped right');\n                //     }\n                // }}\n            >\n                <GameGrid />\n                {running && <GameMusic />}\n                <GameSoundTracks />\n                {starting && !loaded && (\n                    <GamePreloader\n                        className=\"absolute w-full h-full -m-4\"\n                        onLoaded={() => setLoaded(true)}\n                    />\n                )}\n                {starting && loaded && (\n                    <GameTimer\n                        className=\"absolute w-full h-full -m-4\"\n                        onStart={() => dispatch(GameActions.run())}\n                    />\n                )}\n                {showToast && (\n                    <GameToast\n                        className=\"absolute w-full h-full -m-4\"\n                        message={toast!}\n                    />\n                )}\n                {running &&\n                    [restartTicker].map((key) => (\n                        <GameTicker\n                            speed={speed}\n                            key={key}\n                            onTick={() => dispatch(GameActions.tick())}\n                        />\n                    ))}\n                {finishing && (\n                    <GameTicker\n                        speed={50}\n                        onTick={() => dispatch(GameActions.finishing())}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n","import {useEffect, useState} from 'react';\n\nexport const useDocVisible = () => {\n    const isVisible = () => document.visibilityState === 'visible';\n    const [visible, setVisible] = useState(isVisible());\n    useEffect(() => {\n        const onVisible = () => setVisible(isVisible());\n        document.addEventListener('visibilitychange', onVisible);\n        return () =>\n            document.removeEventListener('visibilitychange', onVisible);\n    }, []);\n    return visible;\n};\n","import {FC} from 'react';\nimport {GameDigits} from '../../atoms/game/GameDigits';\nimport {GameValue} from '../../atoms/game/GameValue';\n\nexport interface GameNumberProps {\n    label: string;\n\n    primary?: boolean;\n\n    reverse?: boolean;\n\n    value: number;\n}\n\nexport const GameNumber: FC<GameNumberProps> = ({\n    label,\n    primary,\n    reverse = false,\n    value\n}) => {\n    return (\n        <GameValue label={label} reverse={reverse}>\n            <GameDigits\n                className=\"text-[1.25rem] h-[1.9rem] sm:text-2xl sm:h-[2.5rem]\"\n                digits={7}\n                primary={primary}\n                value={value}\n            />\n        </GameValue>\n    );\n};\n","import classNames from 'classnames';\nimport {VFC} from 'react';\nimport {useSelector} from 'react-redux';\nimport {GameSelectors} from '../../../store/game/game-selectors';\nimport {GameNumber} from '../../molecules/game/GameNumber';\nimport {ClassNameProps} from '../../particles/particles.types';\n\nexport interface GameNumbersProps {\n    reverse?: boolean;\n}\n\nexport const GameNumbers: VFC<GameNumbersProps & ClassNameProps> = ({\n    reverse = false,\n    className\n}) => {\n    const score = useSelector(GameSelectors.score);\n    const level = useSelector(GameSelectors.level);\n    const lines = useSelector(GameSelectors.lines);\n\n    return (\n        <div className={classNames(className, 'flex')}>\n            <GameNumber label=\"Score\" value={score} reverse={reverse} />\n            <GameNumber\n                label=\"Level\"\n                value={level}\n                reverse={reverse}\n                primary={false}\n            />\n            <GameNumber\n                label=\"Lines\"\n                value={lines}\n                reverse={reverse}\n                primary={false}\n            />\n        </div>\n    );\n};\n","import {VFC} from 'react';\nimport {GameSelectors} from '../../store/game/game-selectors';\nimport {GamePieces} from '../molecules/game/GamePieces';\nimport {GameControls} from '../organisms/game/GameControls';\nimport {GameEngine} from '../organisms/game/GameEngine';\nimport {GameNumbers} from '../organisms/game/GameNumbers';\nimport {usePageView} from '../particles/hooks/usePageView';\n\nexport interface GameDesktopProps {\n    floatControls: boolean;\n}\n\nexport const GameDesktop: VFC<GameDesktopProps> = ({floatControls}) => {\n    usePageView('/game/desktop');\n    return (\n        <>\n            <div className=\"grid grid-cols-desktop opacity-90 gap-4 m-auto\">\n                <div className=\"flex flex-col\">\n                    <GamePieces\n                        reverse={true}\n                        className=\"p-4\"\n                        label=\"Hold\"\n                        selectPieces={GameSelectors.hold}\n                    />\n                    <GameNumbers className=\"flex-col mt-auto gap-4\" />\n                </div>\n                <GameEngine />\n                <div className=\"flex flex-col\">\n                    <GamePieces\n                        className=\"p-4\"\n                        label=\"Next\"\n                        reverse={true}\n                        selectPieces={GameSelectors.next}\n                    />\n                </div>\n                {!floatControls && (\n                    <GameControls className=\"col-start-2 mt-5\" />\n                )}\n            </div>\n            {floatControls && (\n                <div className=\"flex absolute bottom-0 mb-5 w-full\">\n                    <div className=\"grid grid-cols-desktop gap-4 mx-auto\">\n                        <GameControls\n                            className=\"col-start-2\"\n                            transparent={true}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n","import {VFC} from 'react';\nimport {GameSelectors} from '../../store/game/game-selectors';\nimport {GamePieces} from '../molecules/game/GamePieces';\nimport {GameControls} from '../organisms/game/GameControls';\nimport {GameEngine} from '../organisms/game/GameEngine';\nimport {GameNumbers} from '../organisms/game/GameNumbers';\nimport {usePageView} from '../particles/hooks/usePageView';\n\nexport const GameMobile: VFC = () => {\n    usePageView('/game/mobile');\n    return (\n        <div className=\"flex flex-col p-4\">\n            <GameNumbers className=\"mx-auto gap-2\" reverse={true} />\n            <div className=\"grid grid-cols-mobile gap-2 mx-auto border-gray-700\">\n                <div className=\"flex flex-col\">\n                    <GamePieces\n                        className=\"p-1\"\n                        label=\"Hold\"\n                        reverse={true}\n                        selectPieces={GameSelectors.hold}\n                    />\n                </div>\n                <GameEngine />\n                <div className=\"flex flex-col\">\n                    <GamePieces\n                        className=\"p-1\"\n                        label=\"Next\"\n                        reverse={true}\n                        selectPieces={GameSelectors.next}\n                    />\n                </div>\n            </div>\n            <div className=\"flex absolute bottom-14 left-4 right-4\">\n                <GameControls className=\"w-full\" transparent={true} />\n            </div>\n        </div>\n    );\n};\n","import {FC, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {environment} from '../../environment/environment';\nimport {AppActions} from '../../store/app/app-actions';\nimport {AppDialogType} from '../../store/app/app-model';\nimport {AppSelectors} from '../../store/app/app-selectors';\nimport {GameActions} from '../../store/game/game-actions';\nimport {AppLogo} from '../atoms/app/AppLogo';\nimport {AppMenu, AppMenuItem} from '../atoms/app/AppMenu';\nimport {AppDarkMode} from '../molecules/app/AppDarkMode';\n\nexport interface WelcomeProps {\n    selectStart?: () => number;\n}\n\nexport const Welcome: FC<WelcomeProps> = ({\n    selectStart = AppSelectors.startLevel\n}) => {\n    const startLevel = useSelector(selectStart);\n\n    const menu: Array<AppMenuItem> = useMemo(() => {\n        return [\n            {\n                title: 'New Game',\n                action: GameActions.start(startLevel),\n                active: true\n            },\n            {\n                title: 'High Scores',\n                action: AppActions.open(AppDialogType.HIGH_SCORES)\n            },\n            {\n                title: 'Settings',\n                action: AppActions.open(AppDialogType.OPTIONS)\n            }\n        ];\n    }, [startLevel]);\n\n    return (\n        // Main Screen Background\n        <div className=\"flex flex-col h-full main-bg\">\n            <div className=\"mt-auto mb-14 picture\"></div>\n            <AppMenu className=\"w-44 ml-auto mr-auto\" items={menu} />\n            <div className=\"ml-auto mr-auto mt-5 mb-auto\"></div>\n        </div>\n    );\n};\n","import {useMediaQuery} from '@material-ui/core';\nimport {FC, useEffect, useMemo} from 'react';\nimport {useSelector} from 'react-redux';\nimport {environment} from '../../environment/environment';\nimport {GameSelectors} from '../../store/game/game-selectors';\nimport {CreditsDialog} from '../organisms/dialogs/CreditsDialog';\nimport {FinishDialog} from '../organisms/dialogs/FinishDialog';\nimport {HighScoresDialog} from '../organisms/dialogs/HighScoresDialog';\nimport {OptionsDialog} from '../organisms/dialogs/OptionsDialog';\nimport {SettingsDialog} from '../organisms/dialogs/SettingsDialog';\nimport {PauseDialog} from '../organisms/dialogs/PauseDialog';\nimport {UiThemeProvider} from '../particles/contexts/UiThemeContext';\nimport {usePageView} from '../particles/hooks/usePageView';\nimport {usePersist} from '../particles/hooks/usePersist';\nimport {useTitle} from '../particles/hooks/useTitle';\nimport {GameDesktop} from './GameDesktop';\nimport {GameMobile} from './GameMobile';\nimport {Welcome} from './Welcome';\n\nexport const App: FC = () => {\n    const welcoming = useSelector(GameSelectors.welcoming);\n    const isWideScreen = useMediaQuery('(min-width:600px)');\n    const isShortScreen = useMediaQuery('(max-height:850px)');\n    const isNarrowScreen = useMediaQuery('(max-width:380px)');\n    usePageView('/');\n    usePersist(environment.storageKey);\n    useTitle();\n\n    const game = useMemo(() => {\n        return (\n            <UiThemeProvider\n                transparent={!isWideScreen}\n                large={!isWideScreen && !isNarrowScreen}\n            >\n                {isWideScreen ? (\n                    <GameDesktop floatControls={isShortScreen} />\n                ) : (\n                    <GameMobile />\n                )}\n            </UiThemeProvider>\n        );\n    }, [isWideScreen, isShortScreen, isNarrowScreen]);\n    const level = useSelector(GameSelectors.level) as unknown as\n        | '1'\n        | '2'\n        | '3';\n    const bg = {\n        '1': 'bg-summer',\n        '2': 'bg-winter',\n        '3': 'bg-autumn'\n    } as const;\n    useEffect(() => {\n        console.log(level);\n    }, [level]);\n    return (\n        <div\n            className={`flex flex-col w-full h-full ${\n                bg[level] ? bg[level] : 'bg-spring'\n            }`}\n        >\n            {welcoming ? <Welcome /> : game}\n            <PauseDialog />\n            <FinishDialog />\n            <HighScoresDialog />\n            <OptionsDialog />\n            <SettingsDialog />\n            <CreditsDialog />\n        </div>\n    );\n};\n","import {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useAppDispatch} from '../../../store/app-store';\nimport {AppActions} from '../../../store/app/app-actions';\nimport {APP_PERSIST_DEFAULT, AppPersist} from '../../../store/app/app-model';\nimport {AppSelectors} from '../../../store/app/app-selectors';\n\nexport const usePersist = (storageKey: string) => {\n    const persist = useSelector(AppSelectors.persist);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        const json = localStorage.getItem(storageKey);\n        if (json) {\n            try {\n                const data: AppPersist = JSON.parse(json);\n                if (data?.version === APP_PERSIST_DEFAULT.version) {\n                    dispatch(AppActions.persist(data));\n                }\n            } catch (err) {\n                console.error('Could not read persist data.', err);\n            }\n        }\n    }, [storageKey, dispatch]);\n\n    useEffect(() => {\n        localStorage.setItem(storageKey, JSON.stringify(persist));\n    }, [storageKey, persist]);\n};\n","import {StylesProvider} from '@material-ui/core/styles';\nimport {FunctionComponent} from 'react';\nimport {useDarkMode} from '../../particles/hooks/useDarkMode';\n\nexport const AppTheme: FunctionComponent = ({children}) => {\n    useDarkMode();\n    return <StylesProvider injectFirst>{children}</StylesProvider>;\n};\n","import {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSelectors} from '../../../store/app/app-selectors';\n\nexport const useDarkMode = () => {\n    const dark = useSelector(AppSelectors.dark);\n    useEffect(() => {\n        const html = document.documentElement;\n        if (dark) {\n            html.classList.add('dark');\n        } else {\n            html.classList.remove('dark');\n        }\n    }, [dark]);\n};\n","import {FC, useMemo} from 'react';\nimport {Provider} from 'react-redux';\nimport {getAppStore} from '../../store/app-store';\nimport {AppTheme} from '../atoms/app/AppTheme';\n\nexport const Providers: FC = ({children}) => {\n    const store = useMemo(() => getAppStore(), []);\n    return (\n        <Provider store={store}>\n            <AppTheme>{children}</AppTheme>\n        </Provider>\n    );\n};\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport {App} from './components/templates/App';\nimport {Providers} from './components/templates/Providers';\nimport {environment} from './environment/environment';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nif (environment.analytics) {\n    ReactGA.initialize(environment.analytics);\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Providers>\n            <App />\n        </Providers>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}